//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1179.0 using the following command:
// xscgen /Users/lc5466/Downloads/Norwegian_SAF-T_Financial_Schema_v_1.30.xsd -o SaftSchema.cs -n onboarding_backend.Models
namespace onboarding_backend.Models
{
    
    
    /// <summary>
    /// <para>Containing all information about sales invoices and suppliers invoices.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Containing all information about sales invoices and suppliers invoices.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InvoiceStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceStructure
    {
        
        /// <summary>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("InvoiceNo")]
        public string InvoiceNo { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("CustomerInfo")]
        public InvoiceStructureCustomerInfo CustomerInfo { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("SupplierInfo")]
        public InvoiceStructureSupplierInfo SupplierInfo { get; set; }
        
        /// <summary>
        /// <para>General Ledger Account code of the customer / supplier. Can be including sub-account id. It can contain many different levels to identify the Account. It could include cost centres such as company, division, region, group and branch/department.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("General Ledger Account code of the customer / supplier. Can be including sub-acco" +
            "unt id. It can contain many different levels to identify the Account. It could i" +
            "nclude cost centres such as company, division, region, group and branch/departme" +
            "nt."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("AccountID")]
        public string AccountId { get; set; }
        
        /// <summary>
        /// <para>Branch or Storenumber, additional segregation of customer/supplier, used if not included as part of the customer/supplier id.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Branch or Storenumber, additional segregation of customer/supplier, used if not i" +
            "ncluded as part of the customer/supplier id."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("BranchStoreNumber")]
        public string BranchStoreNumber { get; set; }
        
        /// <summary>
        /// <para>Accounting Period</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accounting Period")]
        [System.Xml.Serialization.XmlElementAttribute("Period")]
        public string Period { get; set; }
        
        /// <summary>
        /// <para>The year of the Accounting Period.</para>
        /// <para xml:lang="en">Minimum inclusive value: 1970.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2100.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The year of the Accounting Period.")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "1970", "2100")]
        [System.Xml.Serialization.XmlElementAttribute("PeriodYear")]
        public ushort PeriodYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PeriodYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodYearSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("InvoiceDate", DataType="date")]
        public System.DateTime InvoiceDate { get; set; }
        
        /// <summary>
        /// <para>Type of invoice: Debit invoice, Credit invoice, Cash, Ticket, etc.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of invoice: Debit invoice, Credit invoice, Cash, Ticket, etc.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("InvoiceType")]
        public string InvoiceType { get; set; }
        
        /// <summary>
        /// <para>Ship To details</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ship To details")]
        [System.Xml.Serialization.XmlElementAttribute("ShipTo")]
        public ShippingPointStructure ShipTo { get; set; }
        
        /// <summary>
        /// <para>Ship from Details</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ship from Details")]
        [System.Xml.Serialization.XmlElementAttribute("ShipFrom")]
        public ShippingPointStructure ShipFrom { get; set; }
        
        /// <summary>
        /// <para>Payments terms for this invoice</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Payments terms for this invoice")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("PaymentTerms")]
        public string PaymentTerms { get; set; }
        
        /// <summary>
        /// <para>Indicator showing if self-billing  is used for this invoice.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicator showing if self-billing is used for this invoice.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("SelfBillingIndicator")]
        public string SelfBillingIndicator { get; set; }
        
        /// <summary>
        /// <para>Details of person or application that entered the transaction</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of person or application that entered the transaction")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SourceID")]
        public string SourceId { get; set; }
        
        /// <summary>
        /// <para>Date posting to GL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date posting to GL")]
        [System.Xml.Serialization.XmlElementAttribute("GLPostingDate", DataType="date")]
        public System.DateTime GlPostingDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlPostingDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GlPostingDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Systems generated ID for batch</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Systems generated ID for batch")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("BatchID")]
        public string BatchId { get; set; }
        
        /// <summary>
        /// <para>Unique number created by the system for the document</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique number created by the system for the document")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SystemID")]
        public string SystemId { get; set; }
        
        /// <summary>
        /// <para>Cross-reference to GL posting. It can contain many different levels to identify the transaction. It could include cost centres such as company, division, region, group and branch/department.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Cross-reference to GL posting. It can contain many different levels to identify t" +
            "he transaction. It could include cost centres such as company, division, region," +
            " group and branch/department."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionID")]
        public string TransactionId { get; set; }
        
        /// <summary>
        /// <para>The number(s) of the receipt(s) on this "consolidated invoicerecord". Can be a single number, a range or a list.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("The number(s) of the receipt(s) on this \"consolidated invoicerecord\". Can be a si" +
            "ngle number, a range or a list."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("ReceiptNumbers")]
        public string ReceiptNumbers { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<InvoiceStructureLine> _line;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Line")]
        public System.Collections.ObjectModel.Collection<InvoiceStructureLine> Line
        {
            get
            {
                return _line;
            }
            private set
            {
                _line = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="InvoiceStructure" /> class.</para>
        /// </summary>
        public InvoiceStructure()
        {
            this._line = new System.Collections.ObjectModel.Collection<InvoiceStructureLine>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Settlement")]
        public InvoiceStructureSettlement Settlement { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentTotals")]
        public InvoiceStructureDocumentTotals DocumentTotals { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InvoiceStructureCustomerInfo", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceStructureCustomerInfo
    {
        
        /// <summary>
        /// <para>Unique code for the customer</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique code for the customer")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("CustomerID")]
        public string CustomerId { get; set; }
        
        /// <summary>
        /// <para>Name of the customer</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Name of the customer")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("Name")]
        public string Name { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("BillingAddress")]
        public AddressStructure BillingAddress { get; set; }
    }
    
    /// <summary>
    /// <para>A common structure used wherever an address is required.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A common structure used wherever an address is required.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AddressStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressStructure
    {
        
        /// <summary>
        /// <para>Address line 1. Normally street name or post box. Can also include house number.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Address line 1. Normally street name or post box. Can also include house number.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("StreetName")]
        public string StreetName { get; set; }
        
        /// <summary>
        /// <para>Address line 1. House number if available.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Address line 1. House number if available.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("Number")]
        public string Number { get; set; }
        
        /// <summary>
        /// <para>Address line 2.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Address line 2.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("AdditionalAddressDetail")]
        public string AdditionalAddressDetail { get; set; }
        
        /// <summary>
        /// <para>Not in use</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("Building")]
        public string Building { get; set; }
        
        /// <summary>
        /// <para>Name of the city/post district.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Name of the city/post district.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("City")]
        public string City { get; set; }
        
        /// <summary>
        /// <para>Postal code for the relevant city/post district.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Postal code for the relevant city/post district.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("PostalCode")]
        public string PostalCode { get; set; }
        
        /// <summary>
        /// <para>Country specific code to indicate regions / provinces within the tax authority.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Country specific code to indicate regions / provinces within the tax authority.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("Region")]
        public string Region { get; set; }
        
        /// <summary>
        /// <para>Two-letter country code according to ISO 3166-1 alpha 2 standard.</para>
        /// <para>Two-letter country code according to ISO 3166-1 alpha 2 standard. Example: NO for the Norway.</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Two-letter country code according to ISO 3166-1 alpha 2 standard.")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.Xml.Serialization.XmlElementAttribute("Country")]
        public string Country { get; set; }
        
        /// <summary>
        /// <para>Field to differentiate between multiple addresses and to indicate the type of address. 
        ///Choose from the predefined enumerations: 
        ///StreetAddress, PostalAddress, BillingAddress, ShipToAddress, ShipFromAddress.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Field to differentiate between multiple addresses and to indicate the type of add" +
            "ress. Choose from the predefined enumerations: StreetAddress, PostalAddress, Bil" +
            "lingAddress, ShipToAddress, ShipFromAddress."))]
        [System.Xml.Serialization.XmlElementAttribute("AddressType")]
        public AddressStructureAddressType AddressType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddressType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddressTypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AddressStructureAddressType", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    public enum AddressStructureAddressType
    {
        
        StreetAddress,
        
        PostalAddress,
        
        BillingAddress,
        
        ShipToAddress,
        
        ShipFromAddress,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InvoiceStructureSupplierInfo", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceStructureSupplierInfo
    {
        
        /// <summary>
        /// <para>Unique code for the supplier</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique code for the supplier")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SupplierID")]
        public string SupplierId { get; set; }
        
        /// <summary>
        /// <para>Name of the supplier</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Name of the supplier")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("Name")]
        public string Name { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("BillingAddress")]
        public AddressStructure BillingAddress { get; set; }
    }
    
    /// <summary>
    /// <para>A structure that holds all shipping point information.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A structure that holds all shipping point information.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ShippingPointStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShippingPointStructure
    {
        
        /// <summary>
        /// <para>Identification of the delivery</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identification of the delivery")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("DeliveryID")]
        public string DeliveryId { get; set; }
        
        /// <summary>
        /// <para>Date goods are delivered</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date goods are delivered")]
        [System.Xml.Serialization.XmlElementAttribute("DeliveryDate", DataType="date")]
        public System.DateTime DeliveryDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeliveryDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveryDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Warehouse where goods held - also to identify work-in-progress, or stock-in-transit</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Warehouse where goods held - also to identify work-in-progress, or stock-in-trans" +
            "it"))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("WarehouseID")]
        public string WarehouseId { get; set; }
        
        /// <summary>
        /// <para>Location of goods in warehouse</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Location of goods in warehouse")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("LocationID")]
        public string LocationId { get; set; }
        
        /// <summary>
        /// <para>Unique consignment reference number</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique consignment reference number")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("UCR")]
        public string Ucr { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Address")]
        public AddressStructure Address { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InvoiceStructureLine", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceStructureLine
    {
        
        /// <summary>
        /// <para>Number of the invoiceline</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of the invoiceline")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("LineNumber")]
        public string LineNumber { get; set; }
        
        /// <summary>
        /// <para>General Ledger Account code of the GL-revenue-account. Can be including sub-account id. It can contain many different levels to identify the Account. It could include cost centres such as company, division, region, group and branch/department.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("General Ledger Account code of the GL-revenue-account. Can be including sub-accou" +
            "nt id. It can contain many different levels to identify the Account. It could in" +
            "clude cost centres such as company, division, region, group and branch/departmen" +
            "t."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("AccountID")]
        public string AccountId { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AnalysisStructure> _analysis;
        
        /// <summary>
        /// <para>General Ledger analysis codes</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Ledger analysis codes")]
        [System.Xml.Serialization.XmlElementAttribute("Analysis")]
        public System.Collections.ObjectModel.Collection<AnalysisStructure> Analysis
        {
            get
            {
                return _analysis;
            }
            private set
            {
                _analysis = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Analysis collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnalysisSpecified
        {
            get
            {
                return (this.Analysis.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="InvoiceStructureLine" /> class.</para>
        /// </summary>
        public InvoiceStructureLine()
        {
            this._analysis = new System.Collections.ObjectModel.Collection<AnalysisStructure>();
            this._orderReferences = new System.Collections.ObjectModel.Collection<InvoiceStructureLineOrderReferences>();
            this._taxInformation = new System.Collections.ObjectModel.Collection<TaxInformationStructure>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<InvoiceStructureLineOrderReferences> _orderReferences;
        
        /// <summary>
        /// <para>Relevant order references</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Relevant order references")]
        [System.Xml.Serialization.XmlElementAttribute("OrderReferences")]
        public System.Collections.ObjectModel.Collection<InvoiceStructureLineOrderReferences> OrderReferences
        {
            get
            {
                return _orderReferences;
            }
            private set
            {
                _orderReferences = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OrderReferences collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrderReferencesSpecified
        {
            get
            {
                return (this.OrderReferences.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Ship To details</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ship To details")]
        [System.Xml.Serialization.XmlElementAttribute("ShipTo")]
        public ShippingPointStructure ShipTo { get; set; }
        
        /// <summary>
        /// <para>Ship from Details</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ship from Details")]
        [System.Xml.Serialization.XmlElementAttribute("ShipFrom")]
        public ShippingPointStructure ShipFrom { get; set; }
        
        /// <summary>
        /// <para>Indicator showing if goods or service</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicator showing if goods or service")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("GoodsServicesID")]
        public string GoodsServicesId { get; set; }
        
        /// <summary>
        /// <para>Product code</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product code")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("ProductCode")]
        public string ProductCode { get; set; }
        
        /// <summary>
        /// <para>Description of goods or services.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of goods or services.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("ProductDescription")]
        public string ProductDescription { get; set; }
        
        /// <summary>
        /// <para>Information about the date or timeframe of the delivery of the goods or services.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information about the date or timeframe of the delivery of the goods or services.")]
        [System.Xml.Serialization.XmlElementAttribute("Delivery")]
        public InvoiceStructureLineDelivery Delivery { get; set; }
        
        /// <summary>
        /// <para>Quantity of goods and services supplied.</para>
        /// <para>Used to describe a quantity. Monetary amount. 22 digits max, of which 6 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of goods and services supplied.")]
        [System.Xml.Serialization.XmlElementAttribute("Quantity")]
        public decimal Quantity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Quantity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified { get; set; }
        
        /// <summary>
        /// <para>Quantity unit of measure e.g. pack of 12</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity unit of measure e.g. pack of 12")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("InvoiceUOM")]
        public string InvoiceUom { get; set; }
        
        /// <summary>
        /// <para>Conversion factor of the InvoiceUOM to UOM Base. Only needed when InvoiceUOM is reported and is different from the UOM Base.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Conversion factor of the InvoiceUOM to UOM Base. Only needed when InvoiceUOM is r" +
            "eported and is different from the UOM Base."))]
        [System.Xml.Serialization.XmlElementAttribute("UOMToUOMBaseConversionFactor")]
        public decimal UomToUomBaseConversionFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UomToUomBaseConversionFactor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UomToUomBaseConversionFactorSpecified { get; set; }
        
        /// <summary>
        /// <para>Unit price for the unit/group of units per UOM in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit price for the unit/group of units per UOM in the header\'s default currency.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("UnitPrice")]
        public decimal UnitPrice { get; set; }
        
        /// <summary>
        /// <para>Tax Point date where recorded or if not recorded then the Invoice date</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Point date where recorded or if not recorded then the Invoice date")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TaxPointDate", DataType="date")]
        public System.DateTime TaxPointDate { get; set; }
        
        /// <summary>
        /// <para>Credit Note references</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit Note references")]
        [System.Xml.Serialization.XmlElementAttribute("References")]
        public InvoiceStructureLineReferences References { get; set; }
        
        /// <summary>
        /// <para>Description of Invoice Line.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of Invoice Line.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Amount for transaction excluding taxes and freightcharges.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amount for transaction excluding taxes and freightcharges.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("InvoiceLineAmount")]
        public AmountStructure InvoiceLineAmount { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the amounts on line-level are debit or credit amounts. Entry must correspond to entry reflected in General Ledger Entry. Signing of lineamounts is relative to this indicator. E.g. a return can lead to a negative amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Indicates whether the amounts on line-level are debit or credit amounts. Entry mu" +
            "st correspond to entry reflected in General Ledger Entry. Signing of lineamounts" +
            " is relative to this indicator. E.g. a return can lead to a negative amount."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DebitCreditIndicator")]
        public InvoiceStructureLineDebitCreditIndicator DebitCreditIndicator { get; set; }
        
        /// <summary>
        /// <para>Amount for shipping/freight charges.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amount for shipping/freight charges.")]
        [System.Xml.Serialization.XmlElementAttribute("ShippingCostsAmount")]
        public AmountStructure ShippingCostsAmount { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TaxInformationStructure> _taxInformation;
        
        [System.Xml.Serialization.XmlElementAttribute("TaxInformation")]
        public System.Collections.ObjectModel.Collection<TaxInformationStructure> TaxInformation
        {
            get
            {
                return _taxInformation;
            }
            private set
            {
                _taxInformation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TaxInformation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxInformationSpecified
        {
            get
            {
                return (this.TaxInformation.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>General Ledger analysis codes.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("General Ledger analysis codes.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AnalysisStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AnalysisPartyInfoStructure))]
    public partial class AnalysisStructure
    {
        
        /// <summary>
        /// <para>Analysis type identifier/code for the dimension type (e.g. departments, projects, cost centers, etc.)</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Analysis type identifier/code for the dimension type (e.g. departments, projects," +
            " cost centers, etc.)"))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AnalysisType")]
        public string AnalysisType { get; set; }
        
        /// <summary>
        /// <para>Analysis ID of the specific dimension.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Analysis ID of the specific dimension.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AnalysisID")]
        public string AnalysisId { get; set; }
        
        /// <summary>
        /// <para>Debit amount information for analysis.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Debit amount information for analysis.")]
        [System.Xml.Serialization.XmlElementAttribute("DebitAnalysisAmount")]
        public AmountStructure DebitAnalysisAmount { get; set; }
        
        /// <summary>
        /// <para>Credit amount information for analysis.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit amount information for analysis.")]
        [System.Xml.Serialization.XmlElementAttribute("CreditAnalysisAmount")]
        public AmountStructure CreditAnalysisAmount { get; set; }
    }
    
    /// <summary>
    /// <para>A common structure used wherever an amount is required. Monetary amount with optional foreign currency exchange rate information.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(("A common structure used wherever an amount is required. Monetary amount with opti" +
        "onal foreign currency exchange rate information."))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AmountStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AmountStructure
    {
        
        /// <summary>
        /// <para>Amount in the header’s default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amount in the header’s default currency.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para>Three-letter currency code according to ISO 4217 standard. 
        ///Required if CurrencyAmount is used.</para>
        /// <para>Three-letter currency code according to ISO 4217 standard. Example: EUR for the Euros or NOK for Norwegian kroner.</para>
        /// <para xml:lang="en">Minimum length: 3.</para>
        /// <para xml:lang="en">Maximum length: 3.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Three-letter currency code according to ISO 4217 standard. Required if CurrencyAm" +
            "ount is used."))]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(3)]
        [System.Xml.Serialization.XmlElementAttribute("CurrencyCode")]
        public string CurrencyCode { get; set; }
        
        /// <summary>
        /// <para>Amount in foreign currency. 
        ///Required if CurrencyCode is used.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amount in foreign currency. Required if CurrencyCode is used.")]
        [System.Xml.Serialization.XmlElementAttribute("CurrencyAmount")]
        public decimal CurrencyAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrencyAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrencyAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The exchange rate used. 
        ///CurrencyAmount x ExchangeRate = Amount</para>
        /// <para>18 digits max, of which 8 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 8.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The exchange rate used. CurrencyAmount x ExchangeRate = Amount")]
        [System.Xml.Serialization.XmlElementAttribute("ExchangeRate")]
        public decimal ExchangeRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExchangeRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExchangeRateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InvoiceStructureLineOrderReferences", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceStructureLineOrderReferences
    {
        
        /// <summary>
        /// <para>Origination Order Number</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Origination Order Number")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("OriginatingON")]
        public string OriginatingOn { get; set; }
        
        /// <summary>
        /// <para>Date of order</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date of order")]
        [System.Xml.Serialization.XmlElementAttribute("OrderDate", DataType="date")]
        public System.DateTime OrderDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OrderDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrderDateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InvoiceStructureLineDelivery", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceStructureLineDelivery
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _movementReference;
        
        /// <summary>
        /// <para>Unique reference to the movement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique reference to the movement.")]
        [System.Xml.Serialization.XmlElementAttribute("MovementReference")]
        public System.Collections.ObjectModel.Collection<string> MovementReference
        {
            get
            {
                return _movementReference;
            }
            private set
            {
                _movementReference = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MovementReference collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MovementReferenceSpecified
        {
            get
            {
                return (this.MovementReference.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="InvoiceStructureLineDelivery" /> class.</para>
        /// </summary>
        public InvoiceStructureLineDelivery()
        {
            this._movementReference = new System.Collections.ObjectModel.Collection<string>();
        }
        
        /// <summary>
        /// <para>The date of the delivery</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date of the delivery")]
        [System.Xml.Serialization.XmlElementAttribute("DeliveryDate", DataType="date")]
        public System.DateTime DeliveryDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeliveryDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveryDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Timeframe of the deliveries</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Timeframe of the deliveries")]
        [System.Xml.Serialization.XmlElementAttribute("DeliveryPeriod")]
        public InvoiceStructureLineDeliveryDeliveryPeriod DeliveryPeriod { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InvoiceStructureLineDeliveryDeliveryPeriod", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceStructureLineDeliveryDeliveryPeriod
    {
        
        /// <summary>
        /// <para>Startdate of the deliveries</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Startdate of the deliveries")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("FromDate", DataType="date")]
        public System.DateTime FromDate { get; set; }
        
        /// <summary>
        /// <para>Enddate of the deliveries</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Enddate of the deliveries")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("ToDate", DataType="date")]
        public System.DateTime ToDate { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InvoiceStructureLineReferences", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceStructureLineReferences
    {
        
        [System.Xml.Serialization.XmlElementAttribute("CreditNote")]
        public InvoiceStructureLineReferencesCreditNote CreditNote { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InvoiceStructureLineReferencesCreditNote", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceStructureLineReferencesCreditNote
    {
        
        /// <summary>
        /// <para>Credit note reference (where applicable) to original invoice</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit note reference (where applicable) to original invoice")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("Reference")]
        public string Reference { get; set; }
        
        /// <summary>
        /// <para>Credit note reason or rationale</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit note reason or rationale")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("Reason")]
        public string Reason { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InvoiceStructureLineDebitCreditIndicator", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    public enum InvoiceStructureLineDebitCreditIndicator
    {
        
        D,
        
        C,
    }
    
    /// <summary>
    /// <para>Tax Amount information structure.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Tax Amount information structure.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TaxInformationStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaxInformationStructure
    {
        
        /// <summary>
        /// <para>Tax type for look-up in tables.
        ///If used, then the only valid value is "MVA".</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax type for look-up in tables. If used, then the only valid value is \"MVA\".")]
        [System.Xml.Serialization.XmlElementAttribute("TaxType")]
        public TaxInformationStructureTaxType TaxType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Tax Code for lookup in tables.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Code for lookup in tables.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("TaxCode")]
        public string TaxCode { get; set; }
        
        /// <summary>
        /// <para>Tax percentage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax percentage.")]
        [System.Xml.Serialization.XmlElementAttribute("TaxPercentage")]
        public decimal TaxPercentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxPercentage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxPercentageSpecified { get; set; }
        
        /// <summary>
        /// <para>Two-letter country code according to ISO 3166-1 alpha 2 standard.</para>
        /// <para>Two-letter country code according to ISO 3166-1 alpha 2 standard. Example: NO for the Norway.</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Two-letter country code according to ISO 3166-1 alpha 2 standard.")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.Xml.Serialization.XmlElementAttribute("Country")]
        public string Country { get; set; }
        
        /// <summary>
        /// <para>The base on which the tax is calculated. This can be an amount, or a quantity, eg. Litres.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("The base on which the tax is calculated. This can be an amount, or a quantity, eg" +
            ". Litres."))]
        [System.Xml.Serialization.XmlElementAttribute("TaxBase")]
        public decimal TaxBase { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxBase property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxBaseSpecified { get; set; }
        
        /// <summary>
        /// <para>Description of the value in the TaxBase. Eg. Litres for excises on alcoholic bevarages.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Description of the value in the TaxBase. Eg. Litres for excises on alcoholic beva" +
            "rages."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("TaxBaseDescription")]
        public string TaxBaseDescription { get; set; }
        
        /// <summary>
        /// <para>Debit amount information for tax.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Debit amount information for tax.")]
        [System.Xml.Serialization.XmlElementAttribute("DebitTaxAmount")]
        public AmountStructure DebitTaxAmount { get; set; }
        
        /// <summary>
        /// <para>Credit amount information for tax.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit amount information for tax.")]
        [System.Xml.Serialization.XmlElementAttribute("CreditTaxAmount")]
        public AmountStructure CreditTaxAmount { get; set; }
        
        /// <summary>
        /// <para>Tax exemption or reduction reason or rationale</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax exemption or reduction reason or rationale")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("TaxExemptionReason")]
        public string TaxExemptionReason { get; set; }
        
        /// <summary>
        /// <para>The identification of the declaration/return in which the taxamount is reported to the Revenue body.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("The identification of the declaration/return in which the taxamount is reported t" +
            "o the Revenue body."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("TaxDeclarationPeriod")]
        public string TaxDeclarationPeriod { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TaxInformationStructureTaxType", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    public enum TaxInformationStructureTaxType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("MVA")]
        Mva,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InvoiceStructureSettlement", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceStructureSettlement
    {
        
        /// <summary>
        /// <para>Description Settlement / Other Discount</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description Settlement / Other Discount")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SettlementDiscount")]
        public string SettlementDiscount { get; set; }
        
        /// <summary>
        /// <para>Settlement amount</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Settlement amount")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("SettlementAmount")]
        public AmountStructure SettlementAmount { get; set; }
        
        /// <summary>
        /// <para>Date settled</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date settled")]
        [System.Xml.Serialization.XmlElementAttribute("SettlementDate", DataType="date")]
        public System.DateTime SettlementDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SettlementDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SettlementDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Payment mechanism</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Payment mechanism")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("PaymentMechanism")]
        public string PaymentMechanism { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InvoiceStructureDocumentTotals", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceStructureDocumentTotals
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TaxInformationStructure> _taxInformationTotals;
        
        /// <summary>
        /// <para>Control totals tax payable information. Per TaxType/TaxCode the TaxBase and TaxAmount are summarised.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Control totals tax payable information. Per TaxType/TaxCode the TaxBase and TaxAm" +
            "ount are summarised."))]
        [System.Xml.Serialization.XmlElementAttribute("TaxInformationTotals")]
        public System.Collections.ObjectModel.Collection<TaxInformationStructure> TaxInformationTotals
        {
            get
            {
                return _taxInformationTotals;
            }
            private set
            {
                _taxInformationTotals = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TaxInformationTotals collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxInformationTotalsSpecified
        {
            get
            {
                return (this.TaxInformationTotals.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="InvoiceStructureDocumentTotals" /> class.</para>
        /// </summary>
        public InvoiceStructureDocumentTotals()
        {
            this._taxInformationTotals = new System.Collections.ObjectModel.Collection<TaxInformationStructure>();
        }
        
        /// <summary>
        /// <para>Control total amount freight charges</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Control total amount freight charges")]
        [System.Xml.Serialization.XmlElementAttribute("ShippingCostsAmountTotal")]
        public decimal ShippingCostsAmountTotal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShippingCostsAmountTotal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShippingCostsAmountTotalSpecified { get; set; }
        
        /// <summary>
        /// <para>Control total sales value excluding tax and shippingcosts.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Control total sales value excluding tax and shippingcosts.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NetTotal")]
        public decimal NetTotal { get; set; }
        
        /// <summary>
        /// <para>Control total amount including tax and shippingcosts.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Control total amount including tax and shippingcosts.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("GrossTotal")]
        public decimal GrossTotal { get; set; }
    }
    
    /// <summary>
    /// <para>Analysis structure (restricted) for use in PartyInfoStructure.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Analysis structure (restricted) for use in PartyInfoStructure.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AnalysisPartyInfoStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnalysisPartyInfoStructure : AnalysisStructure
    {
    }
    
    /// <summary>
    /// <para>Balance account details for Customers and Suppliers in Masterfiles.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Balance account details for Customers and Suppliers in Masterfiles.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BalanceAccountStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BalanceAccountStructure
    {
        
        /// <summary>
        /// <para>General ledger account code/number for this customer. This is the account code/number into where this sub account/accounts receivable is consolidated in the balance sheet.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("General ledger account code/number for this customer. This is the account code/nu" +
            "mber into where this sub account/accounts receivable is consolidated in the bala" +
            "nce sheet."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("AccountID")]
        public string AccountId { get; set; }
        
        /// <summary>
        /// <para>Debit balance at the start date of the selection period in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Debit balance at the start date of the selection period in the header\'s default c" +
            "urrency."))]
        [System.Xml.Serialization.XmlElementAttribute("OpeningDebitBalance")]
        public decimal OpeningDebitBalance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OpeningDebitBalance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OpeningDebitBalanceSpecified { get; set; }
        
        /// <summary>
        /// <para>Credit balance at the start date of the selection period in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Credit balance at the start date of the selection period in the header\'s default " +
            "currency."))]
        [System.Xml.Serialization.XmlElementAttribute("OpeningCreditBalance")]
        public decimal OpeningCreditBalance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OpeningCreditBalance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OpeningCreditBalanceSpecified { get; set; }
        
        /// <summary>
        /// <para>Debit balance at the end date of the selection period in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Debit balance at the end date of the selection period in the header\'s default cur" +
            "rency."))]
        [System.Xml.Serialization.XmlElementAttribute("ClosingDebitBalance")]
        public decimal ClosingDebitBalance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ClosingDebitBalance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClosingDebitBalanceSpecified { get; set; }
        
        /// <summary>
        /// <para>Credit balance at the end date of the selection period in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Credit balance at the end date of the selection period in the header\'s default cu" +
            "rrency."))]
        [System.Xml.Serialization.XmlElementAttribute("ClosingCreditBalance")]
        public decimal ClosingCreditBalance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ClosingCreditBalance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClosingCreditBalanceSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Bank account number information. IBAN number, or account number with optional information.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(("Bank account number information. IBAN number, or account number with optional inf" +
        "ormation."))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BankAccountStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankAccountStructure
    {
        
        /// <summary>
        /// <para>International Bank Account Number, ISO 13616</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("International Bank Account Number, ISO 13616")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("IBANNumber")]
        public string IbanNumber { get; set; }
        
        /// <summary>
        /// <para>The number allocated to the account by the individual’s or company’s own bank.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number allocated to the account by the individual’s or company’s own bank.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("BankAccountNumber")]
        public string BankAccountNumber { get; set; }
        
        /// <summary>
        /// <para>The name of the individual or company holding the bank account.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the individual or company holding the bank account.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("BankAccountName")]
        public string BankAccountName { get; set; }
        
        /// <summary>
        /// <para>Identifier for the bank branch at which the account is held. May be needed to uniquely identify the account. Also known as ABA Number or National Bank Code</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Identifier for the bank branch at which the account is held. May be needed to uni" +
            "quely identify the account. Also known as ABA Number or National Bank Code"))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("SortCode")]
        public string SortCode { get; set; }
        
        /// <summary>
        /// <para>Bank Identifier Code.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank Identifier Code.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("BIC")]
        public string Bic { get; set; }
        
        /// <summary>
        /// <para>Currency Code for the Bank Account from ISO 4217.</para>
        /// <para>Three-letter currency code according to ISO 4217 standard. Example: EUR for the Euros or NOK for Norwegian kroner.</para>
        /// <para xml:lang="en">Minimum length: 3.</para>
        /// <para xml:lang="en">Maximum length: 3.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Currency Code for the Bank Account from ISO 4217.")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(3)]
        [System.Xml.Serialization.XmlElementAttribute("CurrencyCode")]
        public string CurrencyCode { get; set; }
        
        /// <summary>
        /// <para>Link to a General Ledger account.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to a General Ledger account.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("GeneralLedgerAccountID")]
        public string GeneralLedgerAccountId { get; set; }
    }
    
    /// <summary>
    /// <para>CompanyStructure with mandatory RegistrationNumber and Telephone (Contact).</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("CompanyStructure with mandatory RegistrationNumber and Telephone (Contact).")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CompanyHeaderStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompanyHeaderStructure : CompanyStructure
    {
    }
    
    /// <summary>
    /// <para>Name, address, contact and identification information of a company.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Name, address, contact and identification information of a company.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CompanyStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditFileMasterFilesCustomersCustomer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditFileMasterFilesOwnersOwner))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditFileMasterFilesSuppliersSupplier))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CompanyHeaderStructure))]
    public partial class CompanyStructure
    {
        
        /// <summary>
        /// <para>Organization number from The Brønnøysund Register Centre (Brønnøysundregistrene) or other relevant government authority. In case of private persons, the social security number can be used.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Organization number from The Brønnøysund Register Centre (Brønnøysundregistrene) " +
            "or other relevant government authority. In case of private persons, the social s" +
            "ecurity number can be used."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("RegistrationNumber")]
        public string RegistrationNumber { get; set; }
        
        /// <summary>
        /// <para>The name of the company.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the company.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Name")]
        public string Name { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AddressStructure> _address;
        
        /// <summary>
        /// <para>Addresses of the company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Addresses of the company.")]
        [System.Xml.Serialization.XmlElementAttribute("Address")]
        public System.Collections.ObjectModel.Collection<AddressStructure> Address
        {
            get
            {
                return _address;
            }
            private set
            {
                _address = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Address collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddressSpecified
        {
            get
            {
                return (this.Address.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CompanyStructure" /> class.</para>
        /// </summary>
        public CompanyStructure()
        {
            this._address = new System.Collections.ObjectModel.Collection<AddressStructure>();
            this._contact = new System.Collections.ObjectModel.Collection<ContactInformationStructure>();
            this._taxRegistration = new System.Collections.ObjectModel.Collection<TaxIdStructure>();
            this._bankAccount = new System.Collections.ObjectModel.Collection<BankAccountStructure>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ContactInformationStructure> _contact;
        
        /// <summary>
        /// <para>Contacts of the company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contacts of the company.")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public System.Collections.ObjectModel.Collection<ContactInformationStructure> Contact
        {
            get
            {
                return _contact;
            }
            private set
            {
                _contact = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Contact collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContactSpecified
        {
            get
            {
                return (this.Contact.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TaxIdStructure> _taxRegistration;
        
        /// <summary>
        /// <para>Tax registration of the company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax registration of the company.")]
        [System.Xml.Serialization.XmlElementAttribute("TaxRegistration")]
        public System.Collections.ObjectModel.Collection<TaxIdStructure> TaxRegistration
        {
            get
            {
                return _taxRegistration;
            }
            private set
            {
                _taxRegistration = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TaxRegistration collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxRegistrationSpecified
        {
            get
            {
                return (this.TaxRegistration.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BankAccountStructure> _bankAccount;
        
        /// <summary>
        /// <para>Bank accounts of the company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank accounts of the company.")]
        [System.Xml.Serialization.XmlElementAttribute("BankAccount")]
        public System.Collections.ObjectModel.Collection<BankAccountStructure> BankAccount
        {
            get
            {
                return _bankAccount;
            }
            private set
            {
                _bankAccount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BankAccount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BankAccountSpecified
        {
            get
            {
                return (this.BankAccount.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Contact information of a company.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Contact information of a company.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ContactInformationStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactHeaderStructure))]
    public partial class ContactInformationStructure
    {
        
        /// <summary>
        /// <para>The name of the contact person.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the contact person.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("ContactPerson")]
        public PersonNameStructure ContactPerson { get; set; }
        
        /// <summary>
        /// <para>Telephone number.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telephone number.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("Telephone")]
        public string Telephone { get; set; }
        
        /// <summary>
        /// <para>Fax number.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fax number.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("Fax")]
        public string Fax { get; set; }
        
        /// <summary>
        /// <para>E-mail address.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("E-mail address.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>Website address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Website address.")]
        [System.Xml.Serialization.XmlElementAttribute("Website")]
        public string Website { get; set; }
        
        /// <summary>
        /// <para>The mobile phone number (for SMS messages).</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The mobile phone number (for SMS messages).")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("MobilePhone")]
        public string MobilePhone { get; set; }
    }
    
    /// <summary>
    /// <para>All information about the name of a natural person.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("All information about the name of a natural person.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PersonNameStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PersonNameStructure
    {
        
        /// <summary>
        /// <para>Not in use.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("Title")]
        public string Title { get; set; }
        
        /// <summary>
        /// <para>First name of the person. If the name of the person is in an unstructured form, insert “NotUsed” in this element and enter the full unstructured name in the LastName element.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("First name of the person. If the name of the person is in an unstructured form, i" +
            "nsert “NotUsed” in this element and enter the full unstructured name in the Last" +
            "Name element."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("FirstName")]
        public string FirstName { get; set; }
        
        /// <summary>
        /// <para>Initials.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Initials.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("Initials")]
        public string Initials { get; set; }
        
        /// <summary>
        /// <para>A textual expression of a prefix that precedes this person's family name such as Van, Von.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("A textual expression of a prefix that precedes this person\'s family name such as " +
            "Van, Von."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("LastNamePrefix")]
        public string LastNamePrefix { get; set; }
        
        /// <summary>
        /// <para>Last name of the person. If the FirstName element has the text “NotUsed” then this element should contain the full unstructured name of the person.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Last name of the person. If the FirstName element has the text “NotUsed” then thi" +
            "s element should contain the full unstructured name of the person."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("LastName")]
        public string LastName { get; set; }
        
        /// <summary>
        /// <para>Birth name of the person.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Birth name of the person.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("BirthName")]
        public string BirthName { get; set; }
        
        /// <summary>
        /// <para>A formal sign or expression of greeting, expressed as text, that is appropriate for this person such as Right Honourable, Monsignor or Madam.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("A formal sign or expression of greeting, expressed as text, that is appropriate f" +
            "or this person such as Right Honourable, Monsignor or Madam."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("Salutation")]
        public string Salutation { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _otherTitles;
        
        /// <summary>
        /// <para>Used for roles in the company, such as Daglig leder, Styreleder, Regnskapsfører, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Used for roles in the company, such as Daglig leder, Styreleder, Regnskapsfører, " +
            "etc."))]
        [System.Xml.Serialization.XmlElementAttribute("OtherTitles")]
        public System.Collections.ObjectModel.Collection<string> OtherTitles
        {
            get
            {
                return _otherTitles;
            }
            private set
            {
                _otherTitles = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OtherTitles collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherTitlesSpecified
        {
            get
            {
                return (this.OtherTitles.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PersonNameStructure" /> class.</para>
        /// </summary>
        public PersonNameStructure()
        {
            this._otherTitles = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Tax information of a company.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Tax information of a company.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TaxIDStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaxIdStructure
    {
        
        /// <summary>
        /// <para>The company’s VAT (MVA) number. 
        ///This is the unique number/organization number from The Brønnøysund Register Centre (Brønnøysundregistrene). This element is mandatory if the company is subject to VAT (MVA).</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("The company’s VAT (MVA) number. This is the unique number/organization number fro" +
            "m The Brønnøysund Register Centre (Brønnøysundregistrene). This element is manda" +
            "tory if the company is subject to VAT (MVA)."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TaxRegistrationNumber")]
        public string TaxRegistrationNumber { get; set; }
        
        /// <summary>
        /// <para>Not in use.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("TaxType")]
        public string TaxType { get; set; }
        
        /// <summary>
        /// <para>Not in use.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("TaxNumber")]
        public string TaxNumber { get; set; }
        
        /// <summary>
        /// <para>Identification of the Revenue Body to which this TaxType refers.
        ///The only valid value is “Skatteetaten ”.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Identification of the Revenue Body to which this TaxType refers. The only valid v" +
            "alue is “Skatteetaten ”."))]
        [System.Xml.Serialization.XmlElementAttribute("TaxAuthority")]
        public TaxIdStructureTaxAuthority TaxAuthority { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxAuthority property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxAuthoritySpecified { get; set; }
        
        /// <summary>
        /// <para>The date that the tax registration details referred to above were last checked or when the tax registration was completed in the VAT register (Merverdiavgiftsregisteret).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("The date that the tax registration details referred to above were last checked or" +
            " when the tax registration was completed in the VAT register (Merverdiavgiftsreg" +
            "isteret)."))]
        [System.Xml.Serialization.XmlElementAttribute("TaxVerificationDate", DataType="date")]
        public System.DateTime TaxVerificationDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxVerificationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxVerificationDateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TaxIdStructureTaxAuthority", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    public enum TaxIdStructureTaxAuthority
    {
        
        Skatteetaten,
    }
    
    /// <summary>
    /// <para>ContactInformationStructure with madatory TelephoneNumber.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("ContactInformationStructure with madatory TelephoneNumber.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ContactHeaderStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactHeaderStructure : ContactInformationStructure
    {
    }
    
    /// <summary>
    /// <para>Overall information about this Standard Auditfile.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Overall information about this Standard Auditfile.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("HeaderStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditFileHeader))]
    public partial class HeaderStructure
    {
        
        /// <summary>
        /// <para>Version of standard audit file being used. The version number to be used is displayed in an XML annotation in top of the XSD schema file.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Version of standard audit file being used. The version number to be used is displ" +
            "ayed in an XML annotation in top of the XSD schema file."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AuditFileVersion")]
        public string AuditFileVersion { get; set; }
        
        /// <summary>
        /// <para>Two-letter country code according to ISO 3166-1 alpha 2 standard.</para>
        /// <para>Two-letter country code according to ISO 3166-1 alpha 2 standard. Example: NO for the Norway.</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Two-letter country code according to ISO 3166-1 alpha 2 standard.")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AuditFileCountry")]
        public string AuditFileCountry { get; set; }
        
        /// <summary>
        /// <para>Not in use.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("AuditFileRegion")]
        public string AuditFileRegion { get; set; }
        
        /// <summary>
        /// <para>Date of production of the audit file.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date of production of the audit file.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AuditFileDateCreated", DataType="date")]
        public System.DateTime AuditFileDateCreated { get; set; }
        
        /// <summary>
        /// <para>Name of the software company whose product created the audit file.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Name of the software company whose product created the audit file.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("SoftwareCompanyName")]
        public string SoftwareCompanyName { get; set; }
        
        /// <summary>
        /// <para>Name of the software that generated the audit file.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Name of the software that generated the audit file.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("SoftwareID")]
        public string SoftwareId { get; set; }
        
        /// <summary>
        /// <para>Version of the software that generated the audit file.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Version of the software that generated the audit file.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("SoftwareVersion")]
        public string SoftwareVersion { get; set; }
        
        /// <summary>
        /// <para>Company's name and address details.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Company\'s name and address details.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Company")]
        public CompanyHeaderStructure Company { get; set; }
        
        /// <summary>
        /// <para>Three letter Currency Code  (ISO 4217) of local currency which is the default for the audit file.</para>
        /// <para>Three-letter currency code according to ISO 4217 standard. Example: EUR for the Euros or NOK for Norwegian kroner.</para>
        /// <para xml:lang="en">Minimum length: 3.</para>
        /// <para xml:lang="en">Maximum length: 3.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Three letter Currency Code (ISO 4217) of local currency which is the default for " +
            "the audit file."))]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultCurrencyCode")]
        public string DefaultCurrencyCode { get; set; }
        
        /// <summary>
        /// <para>Criteria set by the user to populate the audit files</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Criteria set by the user to populate the audit files")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("SelectionCriteria")]
        public SelectionCriteriaStructure SelectionCriteria { get; set; }
        
        /// <summary>
        /// <para>Space for any further generic comments on the audit file.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Space for any further generic comments on the audit file.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("HeaderComment")]
        public string HeaderComment { get; set; }
    }
    
    /// <summary>
    /// <para>The selection criteria used to generate this Standard Auditfile.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("The selection criteria used to generate this Standard Auditfile.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SelectionCriteriaStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectionCriteriaStructure
    {
        
        /// <summary>
        /// <para>Identifies the tax jurisdiction for whose purpose the SAF has been created. Principally for use where a single Revenue body covers more than one territory.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Identifies the tax jurisdiction for whose purpose the SAF has been created. Princ" +
            "ipally for use where a single Revenue body covers more than one territory."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("TaxReportingJurisdiction")]
        public string TaxReportingJurisdiction { get; set; }
        
        /// <summary>
        /// <para>For use where data has been extracted from the full data set by reference to a specific corporate entity.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("For use where data has been extracted from the full data set by reference to a sp" +
            "ecific corporate entity."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("CompanyEntity")]
        public string CompanyEntity { get; set; }
        
        /// <summary>
        /// <para>The start date for the reporting period covered by the SAF.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the reporting period covered by the SAF.")]
        [System.Xml.Serialization.XmlElementAttribute("SelectionStartDate", DataType="date")]
        public System.DateTime SelectionStartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SelectionStartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SelectionStartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The end date for the reporting period covered by the SAF.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date for the reporting period covered by the SAF.")]
        [System.Xml.Serialization.XmlElementAttribute("SelectionEndDate", DataType="date")]
        public System.DateTime SelectionEndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SelectionEndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SelectionEndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The first Accounting Period covered by the SAF.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The first Accounting Period covered by the SAF.")]
        [System.Xml.Serialization.XmlElementAttribute("PeriodStart")]
        public string PeriodStart { get; set; }
        
        /// <summary>
        /// <para>The Accounting Year in which the PeriodStart falls.</para>
        /// <para xml:lang="en">Minimum inclusive value: 1970.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2100.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Accounting Year in which the PeriodStart falls.")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "1970", "2100")]
        [System.Xml.Serialization.XmlElementAttribute("PeriodStartYear")]
        public ushort PeriodStartYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PeriodStartYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodStartYearSpecified { get; set; }
        
        /// <summary>
        /// <para>The last Accounting Period covered by the SAF.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The last Accounting Period covered by the SAF.")]
        [System.Xml.Serialization.XmlElementAttribute("PeriodEnd")]
        public string PeriodEnd { get; set; }
        
        /// <summary>
        /// <para>The Accounting Year in which the PeriodEnd falls.</para>
        /// <para xml:lang="en">Minimum inclusive value: 1970.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2100.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Accounting Year in which the PeriodEnd falls.")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "1970", "2100")]
        [System.Xml.Serialization.XmlElementAttribute("PeriodEndYear")]
        public ushort PeriodEndYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PeriodEndYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodEndYearSpecified { get; set; }
        
        /// <summary>
        /// <para>Type of documents selected. For use where the data has been restricted by reference to particular transaction types.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Type of documents selected. For use where the data has been restricted by referen" +
            "ce to particular transaction types."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("DocumentType")]
        public string DocumentType { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _otherCriteria;
        
        /// <summary>
        /// <para>Any other criteria used in selecting data. Individual Revenue Bodies may wish to draw up a list of other acceptable selection criteria for use within their jurisdiction.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Any other criteria used in selecting data. Individual Revenue Bodies may wish to " +
            "draw up a list of other acceptable selection criteria for use within their juris" +
            "diction."))]
        [System.Xml.Serialization.XmlElementAttribute("OtherCriteria")]
        public System.Collections.ObjectModel.Collection<string> OtherCriteria
        {
            get
            {
                return _otherCriteria;
            }
            private set
            {
                _otherCriteria = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OtherCriteria collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherCriteriaSpecified
        {
            get
            {
                return (this.OtherCriteria.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SelectionCriteriaStructure" /> class.</para>
        /// </summary>
        public SelectionCriteriaStructure()
        {
            this._otherCriteria = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Additional party information.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Additional party information.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PartyInfoStructure", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PartyInfoStructure
    {
        
        /// <summary>
        /// <para>Payment terms of the party.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Payment terms of the party.")]
        [System.Xml.Serialization.XmlElementAttribute("PaymentTerms")]
        public PartyInfoStructurePaymentTerms PaymentTerms { get; set; }
        
        /// <summary>
        /// <para>NACE (Nomenclature of Economic Activities) is the European statistical classification of economic activities.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("NACE (Nomenclature of Economic Activities) is the European statistical classifica" +
            "tion of economic activities."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("NaceCode")]
        public string NaceCode { get; set; }
        
        /// <summary>
        /// <para>Three-letter currency code according to ISO 4217 standard.</para>
        /// <para>Three-letter currency code according to ISO 4217 standard. Example: EUR for the Euros or NOK for Norwegian kroner.</para>
        /// <para xml:lang="en">Minimum length: 3.</para>
        /// <para xml:lang="en">Maximum length: 3.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Three-letter currency code according to ISO 4217 standard.")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(3)]
        [System.Xml.Serialization.XmlElementAttribute("CurrencyCode")]
        public string CurrencyCode { get; set; }
        
        /// <summary>
        /// <para>Type of party.
        ///Enumerated: Private, Company, Government</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of party. Enumerated: Private, Company, Government")]
        [System.Xml.Serialization.XmlElementAttribute("Type")]
        public PartyInfoStructureType Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Type of account.
        ///Enumerated: Active, Observation, Passive.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of account. Enumerated: Active, Observation, Passive.")]
        [System.Xml.Serialization.XmlElementAttribute("Status")]
        public PartyInfoStructureStatus Status { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AnalysisPartyInfoStructure> _analysis;
        
        /// <summary>
        /// <para>Standard analysis codes for the party, such as project, department, cost center, groups, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Standard analysis codes for the party, such as project, department, cost center, " +
            "groups, etc."))]
        [System.Xml.Serialization.XmlElementAttribute("Analysis")]
        public System.Collections.ObjectModel.Collection<AnalysisPartyInfoStructure> Analysis
        {
            get
            {
                return _analysis;
            }
            private set
            {
                _analysis = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Analysis collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnalysisSpecified
        {
            get
            {
                return (this.Analysis.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PartyInfoStructure" /> class.</para>
        /// </summary>
        public PartyInfoStructure()
        {
            this._analysis = new System.Collections.ObjectModel.Collection<AnalysisPartyInfoStructure>();
        }
        
        /// <summary>
        /// <para>Notes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Notes.")]
        [System.Xml.Serialization.XmlElementAttribute("Notes")]
        public string Notes { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PartyInfoStructurePaymentTerms", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PartyInfoStructurePaymentTerms
    {
        
        /// <summary>
        /// <para>Days of respite before due date from invoice date.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Days of respite before due date from invoice date.")]
        [System.Xml.Serialization.XmlElementAttribute("Days")]
        public string Days { get; set; }
        
        /// <summary>
        /// <para>Months of respite before due date from invoice date.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Months of respite before due date from invoice date.")]
        [System.Xml.Serialization.XmlElementAttribute("Months")]
        public string Months { get; set; }
        
        /// <summary>
        /// <para>Number of days from the invoice date the cash discount can be deducted.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of days from the invoice date the cash discount can be deducted.")]
        [System.Xml.Serialization.XmlElementAttribute("CashDiscountDays")]
        public string CashDiscountDays { get; set; }
        
        /// <summary>
        /// <para>Rate for calculating cash discount.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.00.</para>
        /// <para xml:lang="en">Maximum inclusive value: 100.00.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rate for calculating cash discount.")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0.00", "100.00")]
        [System.Xml.Serialization.XmlElementAttribute("CashDiscountRate")]
        public decimal CashDiscountRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashDiscountRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CashDiscountRateSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicator that states whether free billing month is used or not. Free billing month sets the deadline to the last date of the invoice month.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Indicator that states whether free billing month is used or not. Free billing mon" +
            "th sets the deadline to the last date of the invoice month."))]
        [System.Xml.Serialization.XmlElementAttribute("FreeBillingMonth")]
        public bool FreeBillingMonth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FreeBillingMonth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreeBillingMonthSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PartyInfoStructureType", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    public enum PartyInfoStructureType
    {
        
        Private,
        
        Company,
        
        Government,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PartyInfoStructureStatus", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    public enum PartyInfoStructureStatus
    {
        
        Active,
        
        Observation,
        
        Passive,
    }
    
    /// <summary>
    /// <para>Root element of the Norwegian SAF-T file.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Root element of the Norwegian SAF-T file.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFile", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("AuditFile", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    public partial class AuditFile
    {
        
        /// <summary>
        /// <para>Overall information about this Standard Audit file.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Overall information about this Standard Audit file.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Header")]
        public AuditFileHeader Header { get; set; }
        
        /// <summary>
        /// <para>Holds standing data about general ledger account, suppliers, customers, products, etc.. An extension point is provided to allow Revenue Bodies to specify additional elements or structures such as tax rate tables.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Holds standing data about general ledger account, suppliers, customers, products," +
            " etc.. An extension point is provided to allow Revenue Bodies to specify additio" +
            "nal elements or structures such as tax rate tables."))]
        [System.Xml.Serialization.XmlElementAttribute("MasterFiles")]
        public AuditFileMasterFiles MasterFiles { get; set; }
        
        /// <summary>
        /// <para>Accounting transactions.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accounting transactions.")]
        [System.Xml.Serialization.XmlElementAttribute("GeneralLedgerEntries")]
        public AuditFileGeneralLedgerEntries GeneralLedgerEntries { get; set; }
        
        /// <summary>
        /// <para>Not in use.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.Xml.Serialization.XmlElementAttribute("SourceDocuments")]
        public AuditFileSourceDocuments SourceDocuments { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileHeader", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileHeader : HeaderStructure
    {
        
        /// <summary>
        /// <para>Type of data in the audit file. The only valid value is “A” (Accounting).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of data in the audit file. The only valid value is “A” (Accounting).")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TaxAccountingBasis")]
        public AuditFileHeaderTaxAccountingBasis TaxAccountingBasis { get; set; }
        
        /// <summary>
        /// <para>Company / Division / Branch reference</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Company / Division / Branch reference")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("TaxEntity")]
        public string TaxEntity { get; set; }
        
        /// <summary>
        /// <para>ID of the user that generated the audit file.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ID of the user that generated the audit file.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("UserID")]
        public string UserId { get; set; }
        
        /// <summary>
        /// <para>Information about the sender of the audit file if the sender is not the company that owns the data. This can be an accounting office, a parent company, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Information about the sender of the audit file if the sender is not the company t" +
            "hat owns the data. This can be an accounting office, a parent company, etc."))]
        [System.Xml.Serialization.XmlElementAttribute("AuditFileSender")]
        public CompanyStructure AuditFileSender { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileHeaderTaxAccountingBasis", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    public enum AuditFileHeaderTaxAccountingBasis
    {
        
        A,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFiles", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFiles
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesGeneralLedgerAccountsAccount> _generalLedgerAccounts;
        
        /// <summary>
        /// <para>The general ledger accounts of a company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The general ledger accounts of a company.")]
        [System.Xml.Serialization.XmlArrayAttribute("GeneralLedgerAccounts")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Account", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesGeneralLedgerAccountsAccount> GeneralLedgerAccounts
        {
            get
            {
                return _generalLedgerAccounts;
            }
            private set
            {
                _generalLedgerAccounts = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GeneralLedgerAccounts collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GeneralLedgerAccountsSpecified
        {
            get
            {
                return (this.GeneralLedgerAccounts.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFiles" /> class.</para>
        /// </summary>
        public AuditFileMasterFiles()
        {
            this._generalLedgerAccounts = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesGeneralLedgerAccountsAccount>();
            this._taxonomies = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxonomiesTaxonomy>();
            this._customers = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesCustomersCustomer>();
            this._suppliers = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesSuppliersSupplier>();
            this._taxTable = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxTableTaxTableEntry>();
            this._uomTable = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesUomTableUomTableEntry>();
            this._analysisTypeTable = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesAnalysisTypeTableAnalysisTypeTableEntry>();
            this._movementTypeTable = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesMovementTypeTableMovementTypeTableEntry>();
            this._products = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesProductsProduct>();
            this._physicalStock = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesPhysicalStockPhysicalStockEntry>();
            this._owners = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesOwnersOwner>();
            this._assets = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAsset>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxonomiesTaxonomy> _taxonomies;
        
        /// <summary>
        /// <para>Not in use.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.Xml.Serialization.XmlArrayAttribute("Taxonomies")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Taxonomy", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxonomiesTaxonomy> Taxonomies
        {
            get
            {
                return _taxonomies;
            }
            private set
            {
                _taxonomies = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Taxonomies collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxonomiesSpecified
        {
            get
            {
                return (this.Taxonomies.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesCustomersCustomer> _customers;
        
        /// <summary>
        /// <para>The customers of a company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The customers of a company.")]
        [System.Xml.Serialization.XmlArrayAttribute("Customers")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Customer", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesCustomersCustomer> Customers
        {
            get
            {
                return _customers;
            }
            private set
            {
                _customers = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Customers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomersSpecified
        {
            get
            {
                return (this.Customers.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesSuppliersSupplier> _suppliers;
        
        /// <summary>
        /// <para>The suppliers of a company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The suppliers of a company.")]
        [System.Xml.Serialization.XmlArrayAttribute("Suppliers")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Supplier", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesSuppliersSupplier> Suppliers
        {
            get
            {
                return _suppliers;
            }
            private set
            {
                _suppliers = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Suppliers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuppliersSpecified
        {
            get
            {
                return (this.Suppliers.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxTableTaxTableEntry> _taxTable;
        
        /// <summary>
        /// <para>The tax tables of a company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The tax tables of a company.")]
        [System.Xml.Serialization.XmlArrayAttribute("TaxTable")]
        [System.Xml.Serialization.XmlArrayItemAttribute("TaxTableEntry", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxTableTaxTableEntry> TaxTable
        {
            get
            {
                return _taxTable;
            }
            private set
            {
                _taxTable = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TaxTable collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxTableSpecified
        {
            get
            {
                return (this.TaxTable.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesUomTableUomTableEntry> _uomTable;
        
        /// <summary>
        /// <para>Not in use.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.Xml.Serialization.XmlArrayAttribute("UOMTable")]
        [System.Xml.Serialization.XmlArrayItemAttribute("UOMTableEntry", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesUomTableUomTableEntry> UomTable
        {
            get
            {
                return _uomTable;
            }
            private set
            {
                _uomTable = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UomTable collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UomTableSpecified
        {
            get
            {
                return (this.UomTable.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesAnalysisTypeTableAnalysisTypeTableEntry> _analysisTypeTable;
        
        /// <summary>
        /// <para>Table with the analysis code identifiers. Used for further specification of transaction data. Example: cost unit, cost center, project, department, provider, employees, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Table with the analysis code identifiers. Used for further specification of trans" +
            "action data. Example: cost unit, cost center, project, department, provider, emp" +
            "loyees, etc."))]
        [System.Xml.Serialization.XmlArrayAttribute("AnalysisTypeTable")]
        [System.Xml.Serialization.XmlArrayItemAttribute("AnalysisTypeTableEntry", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesAnalysisTypeTableAnalysisTypeTableEntry> AnalysisTypeTable
        {
            get
            {
                return _analysisTypeTable;
            }
            private set
            {
                _analysisTypeTable = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AnalysisTypeTable collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnalysisTypeTableSpecified
        {
            get
            {
                return (this.AnalysisTypeTable.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesMovementTypeTableMovementTypeTableEntry> _movementTypeTable;
        
        /// <summary>
        /// <para>Not in use.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.Xml.Serialization.XmlArrayAttribute("MovementTypeTable")]
        [System.Xml.Serialization.XmlArrayItemAttribute("MovementTypeTableEntry", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesMovementTypeTableMovementTypeTableEntry> MovementTypeTable
        {
            get
            {
                return _movementTypeTable;
            }
            private set
            {
                _movementTypeTable = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MovementTypeTable collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MovementTypeTableSpecified
        {
            get
            {
                return (this.MovementTypeTable.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesProductsProduct> _products;
        
        /// <summary>
        /// <para>Not in use.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.Xml.Serialization.XmlArrayAttribute("Products")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Product", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesProductsProduct> Products
        {
            get
            {
                return _products;
            }
            private set
            {
                _products = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Products collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductsSpecified
        {
            get
            {
                return (this.Products.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesPhysicalStockPhysicalStockEntry> _physicalStock;
        
        /// <summary>
        /// <para>Not in use.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.Xml.Serialization.XmlArrayAttribute("PhysicalStock")]
        [System.Xml.Serialization.XmlArrayItemAttribute("PhysicalStockEntry", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesPhysicalStockPhysicalStockEntry> PhysicalStock
        {
            get
            {
                return _physicalStock;
            }
            private set
            {
                _physicalStock = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PhysicalStock collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhysicalStockSpecified
        {
            get
            {
                return (this.PhysicalStock.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesOwnersOwner> _owners;
        
        /// <summary>
        /// <para>The owners of a company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The owners of a company.")]
        [System.Xml.Serialization.XmlArrayAttribute("Owners")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Owner", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesOwnersOwner> Owners
        {
            get
            {
                return _owners;
            }
            private set
            {
                _owners = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Owners collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OwnersSpecified
        {
            get
            {
                return (this.Owners.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAsset> _assets;
        
        /// <summary>
        /// <para>Not in use.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.Xml.Serialization.XmlArrayAttribute("Assets")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Asset", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAsset> Assets
        {
            get
            {
                return _assets;
            }
            private set
            {
                _assets = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Assets collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssetsSpecified
        {
            get
            {
                return (this.Assets.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesGeneralLedgerAccounts", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesGeneralLedgerAccounts
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesGeneralLedgerAccountsAccount> _account;
        
        /// <summary>
        /// <para>General ledger account information.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General ledger account information.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Account")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesGeneralLedgerAccountsAccount> Account
        {
            get
            {
                return _account;
            }
            private set
            {
                _account = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesGeneralLedgerAccounts" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesGeneralLedgerAccounts()
        {
            this._account = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesGeneralLedgerAccountsAccount>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesGeneralLedgerAccountsAccount", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesGeneralLedgerAccountsAccount
    {
        
        /// <summary>
        /// <para>General ledger account code/number.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General ledger account code/number.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AccountID")]
        public string AccountId { get; set; }
        
        /// <summary>
        /// <para>Name of individual general ledger account.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Name of individual general ledger account.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AccountDescription")]
        public string AccountDescription { get; set; }
        
        /// <summary>
        /// <para>Use in conjunction with GroupingCode. Use category from codelists.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Use in conjunction with GroupingCode. Use category from codelists.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("GroupingCategory")]
        public string GroupingCategory { get; set; }
        
        /// <summary>
        /// <para>Use in conjunction with GroupingCategory. Use code from codelists.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Use in conjunction with GroupingCategory. Use code from codelists.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("GroupingCode")]
        public string GroupingCode { get; set; }
        
        /// <summary>
        /// <para>Type of account. Set standard account in the StandardAccountID element. The only valid value is “GL” (General Ledger).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Type of account. Set standard account in the StandardAccountID element. The only " +
            "valid value is “GL” (General Ledger)."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AccountType")]
        public AuditFileMasterFilesGeneralLedgerAccountsAccountAccountType AccountType { get; set; }
        
        /// <summary>
        /// <para>Date of when the general ledger account was created.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date of when the general ledger account was created.")]
        [System.Xml.Serialization.XmlElementAttribute("AccountCreationDate", DataType="date")]
        public System.DateTime AccountCreationDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccountCreationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccountCreationDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Debit balance at the start date of the selection period in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Debit balance at the start date of the selection period in the header\'s default c" +
            "urrency."))]
        [System.Xml.Serialization.XmlElementAttribute("OpeningDebitBalance")]
        public decimal OpeningDebitBalance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OpeningDebitBalance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OpeningDebitBalanceSpecified { get; set; }
        
        /// <summary>
        /// <para>Credit balance at the start date of the selection period in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Credit balance at the start date of the selection period in the header\'s default " +
            "currency."))]
        [System.Xml.Serialization.XmlElementAttribute("OpeningCreditBalance")]
        public decimal OpeningCreditBalance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OpeningCreditBalance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OpeningCreditBalanceSpecified { get; set; }
        
        /// <summary>
        /// <para>Debit balance at the end date of the selection period in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Debit balance at the end date of the selection period in the header\'s default cur" +
            "rency."))]
        [System.Xml.Serialization.XmlElementAttribute("ClosingDebitBalance")]
        public decimal ClosingDebitBalance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ClosingDebitBalance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClosingDebitBalanceSpecified { get; set; }
        
        /// <summary>
        /// <para>Credit balance at the end date of the selection period in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Credit balance at the end date of the selection period in the header\'s default cu" +
            "rrency."))]
        [System.Xml.Serialization.XmlElementAttribute("ClosingCreditBalance")]
        public decimal ClosingCreditBalance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ClosingCreditBalance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClosingCreditBalanceSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesGeneralLedgerAccountsAccountAccountType", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    public enum AuditFileMasterFilesGeneralLedgerAccountsAccountAccountType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("GL")]
        Gl,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesTaxonomies", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesTaxonomies
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxonomiesTaxonomy> _taxonomy;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Taxonomy")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxonomiesTaxonomy> Taxonomy
        {
            get
            {
                return _taxonomy;
            }
            private set
            {
                _taxonomy = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesTaxonomies" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesTaxonomies()
        {
            this._taxonomy = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxonomiesTaxonomy>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesTaxonomiesTaxonomy", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesTaxonomiesTaxonomy
    {
        
        /// <summary>
        /// <para>Reference to the taxonomy that applies to the GL Account.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the taxonomy that applies to the GL Account.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TaxonomyReference")]
        public string TaxonomyReference { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxonomiesTaxonomyTaxonomyElement> _taxonomyElement;
        
        [System.Xml.Serialization.XmlElementAttribute("TaxonomyElement")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxonomiesTaxonomyTaxonomyElement> TaxonomyElement
        {
            get
            {
                return _taxonomyElement;
            }
            private set
            {
                _taxonomyElement = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TaxonomyElement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxonomyElementSpecified
        {
            get
            {
                return (this.TaxonomyElement.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesTaxonomiesTaxonomy" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesTaxonomiesTaxonomy()
        {
            this._taxonomyElement = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxonomiesTaxonomyTaxonomyElement>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesTaxonomiesTaxonomyTaxonomyElement", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesTaxonomiesTaxonomyTaxonomyElement
    {
        
        /// <summary>
        /// <para>Reference to specific taxonomy element</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to specific taxonomy element")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TaxonomyCode")]
        public string TaxonomyCode { get; set; }
        
        /// <summary>
        /// <para>Additional reference to specific taxonomy element</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Additional reference to specific taxonomy element")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("TaxonomyClusterID")]
        public string TaxonomyClusterId { get; set; }
        
        /// <summary>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("TaxonomyClusterContextID")]
        public string TaxonomyClusterContextId { get; set; }
        
        /// <summary>
        /// <para>General Ledger Account code for this TaxanomyReference/TaxonomyCode. Can be including sub-account id. It can contain many different levels to identify the Account. It could include cost centres such as company, division, region, group and branch/department.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"General Ledger Account code for this TaxanomyReference/TaxonomyCode. Can be including sub-account id. It can contain many different levels to identify the Account. It could include cost centres such as company, division, region, group and branch/department.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AccountID")]
        public string AccountId { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesCustomers", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesCustomers
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesCustomersCustomer> _customer;
        
        /// <summary>
        /// <para>Customer information.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Customer information.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Customer")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesCustomersCustomer> Customer
        {
            get
            {
                return _customer;
            }
            private set
            {
                _customer = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesCustomers" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesCustomers()
        {
            this._customer = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesCustomersCustomer>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesCustomersCustomer", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesCustomersCustomer : CompanyStructure
    {
        
        /// <summary>
        /// <para>Unique account code/number for the customer.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique account code/number for the customer.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("CustomerID")]
        public string CustomerId { get; set; }
        
        /// <summary>
        /// <para>Indicator showing if a self-billing agreement exists between the customer and the supplier.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Indicator showing if a self-billing agreement exists between the customer and the" +
            " supplier."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("SelfBillingIndicator")]
        public string SelfBillingIndicator { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BalanceAccountStructure> _balanceAccount;
        
        /// <summary>
        /// <para>Balance account details for customer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Balance account details for customer.")]
        [System.Xml.Serialization.XmlElementAttribute("BalanceAccount")]
        public System.Collections.ObjectModel.Collection<BalanceAccountStructure> BalanceAccount
        {
            get
            {
                return _balanceAccount;
            }
            private set
            {
                _balanceAccount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BalanceAccount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalanceAccountSpecified
        {
            get
            {
                return (this.BalanceAccount.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesCustomersCustomer" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesCustomersCustomer()
        {
            this._balanceAccount = new System.Collections.ObjectModel.Collection<BalanceAccountStructure>();
        }
        
        /// <summary>
        /// <para>Additional party information.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Additional party information.")]
        [System.Xml.Serialization.XmlElementAttribute("PartyInfo")]
        public PartyInfoStructure PartyInfo { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesSuppliers", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesSuppliers
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesSuppliersSupplier> _supplier;
        
        /// <summary>
        /// <para>Supplier information.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supplier information.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Supplier")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesSuppliersSupplier> Supplier
        {
            get
            {
                return _supplier;
            }
            private set
            {
                _supplier = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesSuppliers" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesSuppliers()
        {
            this._supplier = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesSuppliersSupplier>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesSuppliersSupplier", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesSuppliersSupplier : CompanyStructure
    {
        
        /// <summary>
        /// <para>Unique account code/number for the supplier.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique account code/number for the supplier.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("SupplierID")]
        public string SupplierId { get; set; }
        
        /// <summary>
        /// <para>Indicator showing if a self-billing agreement exists between the customer and the supplier.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Indicator showing if a self-billing agreement exists between the customer and the" +
            " supplier."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("SelfBillingIndicator")]
        public string SelfBillingIndicator { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BalanceAccountStructure> _balanceAccount;
        
        /// <summary>
        /// <para>Balance account details for supplier.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Balance account details for supplier.")]
        [System.Xml.Serialization.XmlElementAttribute("BalanceAccount")]
        public System.Collections.ObjectModel.Collection<BalanceAccountStructure> BalanceAccount
        {
            get
            {
                return _balanceAccount;
            }
            private set
            {
                _balanceAccount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BalanceAccount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalanceAccountSpecified
        {
            get
            {
                return (this.BalanceAccount.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesSuppliersSupplier" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesSuppliersSupplier()
        {
            this._balanceAccount = new System.Collections.ObjectModel.Collection<BalanceAccountStructure>();
        }
        
        /// <summary>
        /// <para>Additional party information.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Additional party information.")]
        [System.Xml.Serialization.XmlElementAttribute("PartyInfo")]
        public PartyInfoStructure PartyInfo { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesTaxTable", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesTaxTable
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxTableTaxTableEntry> _taxTableEntry;
        
        /// <summary>
        /// <para>Tax entry information.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax entry information.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TaxTableEntry")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxTableTaxTableEntry> TaxTableEntry
        {
            get
            {
                return _taxTableEntry;
            }
            private set
            {
                _taxTableEntry = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesTaxTable" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesTaxTable()
        {
            this._taxTableEntry = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxTableTaxTableEntry>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesTaxTableTaxTableEntry", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesTaxTableTaxTableEntry
    {
        
        /// <summary>
        /// <para>Tax type for look-up in tables. “MVA” is the only valid value.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax type for look-up in tables. “MVA” is the only valid value.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TaxType")]
        public AuditFileMasterFilesTaxTableTaxTableEntryTaxType TaxType { get; set; }
        
        /// <summary>
        /// <para>Description of the Tax Type. “Merverdiavgift” is the only valid value.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of the Tax Type. “Merverdiavgift” is the only valid value.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public AuditFileMasterFilesTaxTableTaxTableEntryDescription Description { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxTableTaxTableEntryTaxCodeDetails> _taxCodeDetails;
        
        /// <summary>
        /// <para>Tax code details of the tax table entry.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax code details of the tax table entry.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TaxCodeDetails")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxTableTaxTableEntryTaxCodeDetails> TaxCodeDetails
        {
            get
            {
                return _taxCodeDetails;
            }
            private set
            {
                _taxCodeDetails = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesTaxTableTaxTableEntry" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesTaxTableTaxTableEntry()
        {
            this._taxCodeDetails = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesTaxTableTaxTableEntryTaxCodeDetails>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesTaxTableTaxTableEntryTaxType", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    public enum AuditFileMasterFilesTaxTableTaxTableEntryTaxType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("MVA")]
        Mva,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesTaxTableTaxTableEntryDescription", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    public enum AuditFileMasterFilesTaxTableTaxTableEntryDescription
    {
        
        Merverdiavgift,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesTaxTableTaxTableEntryTaxCodeDetails", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesTaxTableTaxTableEntryTaxCodeDetails
    {
        
        /// <summary>
        /// <para>Tax Code for lookup in tables.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Code for lookup in tables.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TaxCode")]
        public string TaxCode { get; set; }
        
        /// <summary>
        /// <para>Representing the starting date for this entry.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Representing the starting date for this entry.")]
        [System.Xml.Serialization.XmlElementAttribute("EffectiveDate", DataType="date")]
        public System.DateTime EffectiveDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Representing the ending date for this entry.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Representing the ending date for this entry.")]
        [System.Xml.Serialization.XmlElementAttribute("ExpirationDate", DataType="date")]
        public System.DateTime ExpirationDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpirationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpirationDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Description of the Tax Code.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of the Tax Code.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Tax percentage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax percentage.")]
        [System.Xml.Serialization.XmlElementAttribute("TaxPercentage")]
        public decimal TaxPercentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxPercentage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxPercentageSpecified { get; set; }
        
        /// <summary>
        /// <para>Not in use.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.Xml.Serialization.XmlElementAttribute("FlatTaxRate")]
        public AmountStructure FlatTaxRate { get; set; }
        
        /// <summary>
        /// <para>Two-letter country code according to ISO 3166-1 alpha 2 standard.</para>
        /// <para>Two-letter country code according to ISO 3166-1 alpha 2 standard. Example: NO for the Norway.</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Two-letter country code according to ISO 3166-1 alpha 2 standard.")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Country")]
        public string Country { get; set; }
        
        /// <summary>
        /// <para>Not in use.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("Region")]
        public string Region { get; set; }
        
        /// <summary>
        /// <para>Standard Tax Code. Must always be used to map all VAT codes to standard VAT Tax codes. In situations when mapping is not possible, please use “NA” as value for StandardTaxCode.</para>
        /// <para xml:lang="en">Pattern: [0-9anAN]{1,2}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Standard Tax Code. Must always be used to map all VAT codes to standard VAT Tax c" +
            "odes. In situations when mapping is not possible, please use “NA” as value for S" +
            "tandardTaxCode."))]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9anAN]{1,2}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("StandardTaxCode")]
        public string StandardTaxCode { get; set; }
        
        /// <summary>
        /// <para>Indicates if the Tax Code is used for compensation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates if the Tax Code is used for compensation.")]
        [System.Xml.Serialization.XmlElementAttribute("Compensation")]
        public bool Compensation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Compensation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompensationSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<decimal> _baseRate;
        
        /// <summary>
        /// <para>Base rates used for the tax code. Standard is 100 (the whole amount is tax deductible). Example: 60 if only 60% of the total amount is tax deductible. Enter all standard base rates used for the tax code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Base rates used for the tax code. Standard is 100 (the whole amount is tax deduct" +
            "ible). Example: 60 if only 60% of the total amount is tax deductible. Enter all " +
            "standard base rates used for the tax code."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("BaseRate")]
        public System.Collections.ObjectModel.Collection<decimal> BaseRate
        {
            get
            {
                return _baseRate;
            }
            private set
            {
                _baseRate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesTaxTableTaxTableEntryTaxCodeDetails" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesTaxTableTaxTableEntryTaxCodeDetails()
        {
            this._baseRate = new System.Collections.ObjectModel.Collection<decimal>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesUomTable", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesUomTable
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesUomTableUomTableEntry> _uomTableEntry;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("UOMTableEntry")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesUomTableUomTableEntry> UomTableEntry
        {
            get
            {
                return _uomTableEntry;
            }
            private set
            {
                _uomTableEntry = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesUomTable" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesUomTable()
        {
            this._uomTableEntry = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesUomTableUomTableEntry>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesUomTableUomTableEntry", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesUomTableUomTableEntry
    {
        
        /// <summary>
        /// <para>Quantity unit of measure e.g. pack of 12</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity unit of measure e.g. pack of 12")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("UnitOfMeasure")]
        public string UnitOfMeasure { get; set; }
        
        /// <summary>
        /// <para>Description of the UOM</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of the UOM")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public string Description { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesAnalysisTypeTable", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesAnalysisTypeTable
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesAnalysisTypeTableAnalysisTypeTableEntry> _analysisTypeTableEntry;
        
        /// <summary>
        /// <para>Analysis entry information.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Analysis entry information.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AnalysisTypeTableEntry")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesAnalysisTypeTableAnalysisTypeTableEntry> AnalysisTypeTableEntry
        {
            get
            {
                return _analysisTypeTableEntry;
            }
            private set
            {
                _analysisTypeTableEntry = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesAnalysisTypeTable" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesAnalysisTypeTable()
        {
            this._analysisTypeTableEntry = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesAnalysisTypeTableAnalysisTypeTableEntry>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesAnalysisTypeTableAnalysisTypeTableEntry", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesAnalysisTypeTableAnalysisTypeTableEntry
    {
        
        /// <summary>
        /// <para>Analysis type identifier/code for the dimension type (e.g. departments, projects, cost centers, employees, etc.).</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Analysis type identifier/code for the dimension type (e.g. departments, projects," +
            " cost centers, employees, etc.)."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AnalysisType")]
        public string AnalysisType { get; set; }
        
        /// <summary>
        /// <para>Description of the dimension type.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of the dimension type.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AnalysisTypeDescription")]
        public string AnalysisTypeDescription { get; set; }
        
        /// <summary>
        /// <para>Analysis ID of the specific dimension entity.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Analysis ID of the specific dimension entity.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AnalysisID")]
        public string AnalysisId { get; set; }
        
        /// <summary>
        /// <para>Description of the specific dimension entity.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of the specific dimension entity.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AnalysisIDDescription")]
        public string AnalysisIdDescription { get; set; }
        
        /// <summary>
        /// <para>Start date.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Start date.")]
        [System.Xml.Serialization.XmlElementAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>End date.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("End date.")]
        [System.Xml.Serialization.XmlElementAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Status of the analysis entry. Choose from the predefined enumerations: Active, Closed, Observation, Passive.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Status of the analysis entry. Choose from the predefined enumerations: Active, Cl" +
            "osed, Observation, Passive."))]
        [System.Xml.Serialization.XmlElementAttribute("Status")]
        public AuditFileMasterFilesAnalysisTypeTableAnalysisTypeTableEntryStatus Status { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AnalysisPartyInfoStructure> _analysis;
        
        /// <summary>
        /// <para>Standard linked analysis codes for the analysis entry, such as project, department, cost center, groups, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Standard linked analysis codes for the analysis entry, such as project, departmen" +
            "t, cost center, groups, etc."))]
        [System.Xml.Serialization.XmlElementAttribute("Analysis")]
        public System.Collections.ObjectModel.Collection<AnalysisPartyInfoStructure> Analysis
        {
            get
            {
                return _analysis;
            }
            private set
            {
                _analysis = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Analysis collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnalysisSpecified
        {
            get
            {
                return (this.Analysis.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesAnalysisTypeTableAnalysisTypeTableEntry" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesAnalysisTypeTableAnalysisTypeTableEntry()
        {
            this._analysis = new System.Collections.ObjectModel.Collection<AnalysisPartyInfoStructure>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesAnalysisTypeTableAnalysisTypeTableEntryStatus", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    public enum AuditFileMasterFilesAnalysisTypeTableAnalysisTypeTableEntryStatus
    {
        
        Active,
        
        Closed,
        
        Observation,
        
        Passive,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesMovementTypeTable", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesMovementTypeTable
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesMovementTypeTableMovementTypeTableEntry> _movementTypeTableEntry;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("MovementTypeTableEntry")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesMovementTypeTableMovementTypeTableEntry> MovementTypeTableEntry
        {
            get
            {
                return _movementTypeTableEntry;
            }
            private set
            {
                _movementTypeTableEntry = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesMovementTypeTable" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesMovementTypeTable()
        {
            this._movementTypeTableEntry = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesMovementTypeTableMovementTypeTableEntry>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesMovementTypeTableMovementTypeTableEntry", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesMovementTypeTableMovementTypeTableEntry
    {
        
        /// <summary>
        /// <para>Identify kind of movement or movement line. E.g. sale, purchase, adjustment, etc.  Or  efficiencyloss, use of components in production, etc. Predescribed TABLE is possible.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Identify kind of movement or movement line. E.g. sale, purchase, adjustment, etc." +
            " Or efficiencyloss, use of components in production, etc. Predescribed TABLE is " +
            "possible."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("MovementType")]
        public string MovementType { get; set; }
        
        /// <summary>
        /// <para>Description of the movement(sub)type</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of the movement(sub)type")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public string Description { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesProducts", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesProducts
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesProductsProduct> _product;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Product")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesProductsProduct> Product
        {
            get
            {
                return _product;
            }
            private set
            {
                _product = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesProducts" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesProducts()
        {
            this._product = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesProductsProduct>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesProductsProduct", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesProductsProduct
    {
        
        /// <summary>
        /// <para>Product code</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product code")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("ProductCode")]
        public string ProductCode { get; set; }
        
        /// <summary>
        /// <para>Indicator showing if goods or services (Predescribed TABLE is possible)</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicator showing if goods or services (Predescribed TABLE is possible)")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("GoodsServicesID")]
        public string GoodsServicesId { get; set; }
        
        /// <summary>
        /// <para>Code identifying aggregated level at which similar products are grouped</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Code identifying aggregated level at which similar products are grouped")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("ProductGroup")]
        public string ProductGroup { get; set; }
        
        /// <summary>
        /// <para>Description of goods or services.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of goods or services.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Classification for import / export</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Classification for import / export")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("ProductCommodityCode")]
        public string ProductCommodityCode { get; set; }
        
        /// <summary>
        /// <para>EAN or other code</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EAN or other code")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("ProductNumberCode")]
        public string ProductNumberCode { get; set; }
        
        /// <summary>
        /// <para>FIFO, LIFO, Average cost etc.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FIFO, LIFO, Average cost etc.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("ValuationMethod")]
        public string ValuationMethod { get; set; }
        
        /// <summary>
        /// <para>Unit of measure for Stock Administration for this product Predescribed TABLE is possible.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Unit of measure for Stock Administration for this product Predescribed TABLE is p" +
            "ossible."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("UOMBase")]
        public string UomBase { get; set; }
        
        /// <summary>
        /// <para>A Standard Unit of Measure applicable for this product, f.i. Kilo, Metres, Litres (Predescribed TABLE is possible)</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("A Standard Unit of Measure applicable for this product, f.i. Kilo, Metres, Litres" +
            " (Predescribed TABLE is possible)"))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("UOMStandard")]
        public string UomStandard { get; set; }
        
        /// <summary>
        /// <para>Conversion factor of the UOM to UOM Base</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Conversion factor of the UOM to UOM Base")]
        [System.Xml.Serialization.XmlElementAttribute("UOMToUOMBaseConversionFactor")]
        public decimal UomToUomBaseConversionFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UomToUomBaseConversionFactor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UomToUomBaseConversionFactorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesProductsProductTax> _tax;
        
        [System.Xml.Serialization.XmlElementAttribute("Tax")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesProductsProductTax> Tax
        {
            get
            {
                return _tax;
            }
            private set
            {
                _tax = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Tax collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxSpecified
        {
            get
            {
                return (this.Tax.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesProductsProduct" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesProductsProduct()
        {
            this._tax = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesProductsProductTax>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesProductsProductTax", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesProductsProductTax
    {
        
        /// <summary>
        /// <para>Tax Type for lookup in tables</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Type for lookup in tables")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("TaxType")]
        public string TaxType { get; set; }
        
        /// <summary>
        /// <para>Tax Code for lookup in tables</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Code for lookup in tables")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("TaxCode")]
        public string TaxCode { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesPhysicalStock", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesPhysicalStock
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesPhysicalStockPhysicalStockEntry> _physicalStockEntry;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("PhysicalStockEntry")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesPhysicalStockPhysicalStockEntry> PhysicalStockEntry
        {
            get
            {
                return _physicalStockEntry;
            }
            private set
            {
                _physicalStockEntry = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesPhysicalStock" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesPhysicalStock()
        {
            this._physicalStockEntry = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesPhysicalStockPhysicalStockEntry>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesPhysicalStockPhysicalStockEntry", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesPhysicalStockPhysicalStockEntry
    {
        
        /// <summary>
        /// <para>Warehouse where goods held - possoble also to identify work-in-progress, or stock-in-transit</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Warehouse where goods held - possoble also to identify work-in-progress, or stock" +
            "-in-transit"))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("WarehouseID")]
        public string WarehouseId { get; set; }
        
        /// <summary>
        /// <para>Location of goods in warehouse</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Location of goods in warehouse")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("LocationID")]
        public string LocationId { get; set; }
        
        /// <summary>
        /// <para>Product code</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product code")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("ProductCode")]
        public string ProductCode { get; set; }
        
        /// <summary>
        /// <para>Stock batch, lot, serial identification. Not used when there is exactly 1 PhysicalStock entry per ProductCode</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Stock batch, lot, serial identification. Not used when there is exactly 1 Physica" +
            "lStock entry per ProductCode"))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("StockAccountNo")]
        public string StockAccountNo { get; set; }
        
        /// <summary>
        /// <para>To determine whether the product/stockaccount is raw material, work-in-progress, finished good, merchandise for resale, etc.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("To determine whether the product/stockaccount is raw material, work-in-progress, " +
            "finished good, merchandise for resale, etc."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("ProductType")]
        public string ProductType { get; set; }
        
        /// <summary>
        /// <para>To determine whether the product/stockaccount is discontinued, damaged, obsolete, active, etc.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("To determine whether the product/stockaccount is discontinued, damaged, obsolete," +
            " active, etc."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("ProductStatus")]
        public string ProductStatus { get; set; }
        
        /// <summary>
        /// <para>Classification for import / export</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Classification for import / export")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("StockAccountCommodityCode")]
        public string StockAccountCommodityCode { get; set; }
        
        /// <summary>
        /// <para>Reference to the owner Master File</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the owner Master File")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("OwnerID")]
        public string OwnerId { get; set; }
        
        /// <summary>
        /// <para>Unit of Measurement for this Physical Stock position</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of Measurement for this Physical Stock position")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("UOMPhysicalStock")]
        public string UomPhysicalStock { get; set; }
        
        /// <summary>
        /// <para>Conversion factor of the UOM to UOM Base</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Conversion factor of the UOM to UOM Base")]
        [System.Xml.Serialization.XmlElementAttribute("UOMToUOMBaseConversionFactor")]
        public decimal UomToUomBaseConversionFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UomToUomBaseConversionFactor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UomToUomBaseConversionFactorSpecified { get; set; }
        
        /// <summary>
        /// <para>Base Unit price for this stock account  in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Base Unit price for this stock account in the header\'s default currency.")]
        [System.Xml.Serialization.XmlElementAttribute("UnitPrice")]
        public decimal UnitPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnitPrice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnitPriceSpecified { get; set; }
        
        /// <summary>
        /// <para>In UOM Physical Stock for selection period</para>
        /// <para>Used to describe a quantity. Monetary amount. 22 digits max, of which 6 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("In UOM Physical Stock for selection period")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OpeningStockQuantity")]
        public decimal OpeningStockQuantity { get; set; }
        
        /// <summary>
        /// <para>In  the header's currency code for selection period</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("In the header\'s currency code for selection period")]
        [System.Xml.Serialization.XmlElementAttribute("OpeningStockValue")]
        public decimal OpeningStockValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OpeningStockValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OpeningStockValueSpecified { get; set; }
        
        /// <summary>
        /// <para>In UOM Physical Stock for selection period</para>
        /// <para>Used to describe a quantity. Monetary amount. 22 digits max, of which 6 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("In UOM Physical Stock for selection period")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("ClosingStockQuantity")]
        public decimal ClosingStockQuantity { get; set; }
        
        /// <summary>
        /// <para>Closing stock value  in the header's default currency for selection period</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Closing stock value in the header\'s default currency for selection period")]
        [System.Xml.Serialization.XmlElementAttribute("ClosingStockValue")]
        public decimal ClosingStockValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ClosingStockValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClosingStockValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("StockCharacteristics")]
        public AuditFileMasterFilesPhysicalStockPhysicalStockEntryStockCharacteristics StockCharacteristics { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesPhysicalStockPhysicalStockEntryStockCharacteristics", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesPhysicalStockPhysicalStockEntryStockCharacteristics
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _stockCharacteristic;
        
        /// <summary>
        /// <para>User definable characteristics of the goods. Predescribed TABLE is possible.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("User definable characteristics of the goods. Predescribed TABLE is possible.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("StockCharacteristic")]
        public System.Collections.ObjectModel.Collection<string> StockCharacteristic
        {
            get
            {
                return _stockCharacteristic;
            }
            private set
            {
                _stockCharacteristic = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesPhysicalStockPhysicalStockEntryStockCharacteristics" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesPhysicalStockPhysicalStockEntryStockCharacteristics()
        {
            this._stockCharacteristic = new System.Collections.ObjectModel.Collection<string>();
            this._stockCharacteristicValue = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _stockCharacteristicValue;
        
        /// <summary>
        /// <para>The weight, pack size, colour etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The weight, pack size, colour etc.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("StockCharacteristicValue")]
        public System.Collections.ObjectModel.Collection<string> StockCharacteristicValue
        {
            get
            {
                return _stockCharacteristicValue;
            }
            private set
            {
                _stockCharacteristicValue = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesOwners", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesOwners
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesOwnersOwner> _owner;
        
        /// <summary>
        /// <para>Owner information.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Owner information.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Owner")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesOwnersOwner> Owner
        {
            get
            {
                return _owner;
            }
            private set
            {
                _owner = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesOwners" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesOwners()
        {
            this._owner = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesOwnersOwner>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesOwnersOwner", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesOwnersOwner : CompanyStructure
    {
        
        /// <summary>
        /// <para>Unique ID code/number for the owner.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique ID code/number for the owner.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("OwnerID")]
        public string OwnerId { get; set; }
        
        /// <summary>
        /// <para>General ledger account code for this owner. Can be including sub-account id. It can contain many different levels to identify the Account.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("General ledger account code for this owner. Can be including sub-account id. It c" +
            "an contain many different levels to identify the Account."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("AccountID")]
        public string AccountId { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesAssets", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesAssets
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAsset> _asset;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Asset")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAsset> Asset
        {
            get
            {
                return _asset;
            }
            private set
            {
                _asset = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesAssets" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesAssets()
        {
            this._asset = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAsset>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesAssetsAsset", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesAssetsAsset
    {
        
        /// <summary>
        /// <para>Unique identifier of the asset</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique identifier of the asset")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AssetID")]
        public string AssetId { get; set; }
        
        /// <summary>
        /// <para>General Ledger Account code. Can be including sub-account id. It can contain many different levels to identify the Account. It could include cost centres such as company, division, region, group and branch/department.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("General Ledger Account code. Can be including sub-account id. It can contain many" +
            " different levels to identify the Account. It could include cost centres such as" +
            " company, division, region, group and branch/department."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AccountID")]
        public string AccountId { get; set; }
        
        /// <summary>
        /// <para>Description of this asset</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of this asset")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public string Description { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetSupplier> _supplier;
        
        /// <summary>
        /// <para>Contains the information of all suppliers, including the historical suppliers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains the information of all suppliers, including the historical suppliers.")]
        [System.Xml.Serialization.XmlElementAttribute("Supplier")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetSupplier> Supplier
        {
            get
            {
                return _supplier;
            }
            private set
            {
                _supplier = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Supplier collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupplierSpecified
        {
            get
            {
                return (this.Supplier.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesAssetsAsset" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesAssetsAsset()
        {
            this._supplier = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetSupplier>();
            this._valuations = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetValuationsValuation>();
        }
        
        /// <summary>
        /// <para>Date of the purchase order of this asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date of the purchase order of this asset")]
        [System.Xml.Serialization.XmlElementAttribute("PurchaseOrderDate", DataType="date")]
        public System.DateTime PurchaseOrderDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PurchaseOrderDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PurchaseOrderDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Date of the acquisition of the asset (usually the date of delivery).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date of the acquisition of the asset (usually the date of delivery).")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DateOfAcquisition", DataType="date")]
        public System.DateTime DateOfAcquisition { get; set; }
        
        /// <summary>
        /// <para>Commissioning date of the asset.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commissioning date of the asset.")]
        [System.Xml.Serialization.XmlElementAttribute("StartUpDate", DataType="date")]
        public System.DateTime StartUpDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartUpDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartUpDateSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetValuationsValuation> _valuations;
        
        /// <summary>
        /// <para>The data can be reported for different purposes. More than one can be in this SAF.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("The data can be reported for different purposes. More than one can be in this SAF" +
            "."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlArrayAttribute("Valuations")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Valuation", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetValuationsValuation> Valuations
        {
            get
            {
                return _valuations;
            }
            private set
            {
                _valuations = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesAssetsAssetSupplier", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesAssetsAssetSupplier
    {
        
        /// <summary>
        /// <para>Name of the supplier of the asset</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Name of the supplier of the asset")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("SupplierName")]
        public string SupplierName { get; set; }
        
        /// <summary>
        /// <para>Unique code for the supplier</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique code for the supplier")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SupplierID")]
        public string SupplierId { get; set; }
        
        /// <summary>
        /// <para>Address information of the supplier of the asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Address information of the supplier of the asset")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("PostalAddress")]
        public AddressStructure PostalAddress { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesAssetsAssetValuations", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesAssetsAssetValuations
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetValuationsValuation> _valuation;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Valuation")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetValuationsValuation> Valuation
        {
            get
            {
                return _valuation;
            }
            private set
            {
                _valuation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesAssetsAssetValuations" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesAssetsAssetValuations()
        {
            this._valuation = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetValuationsValuation>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileMasterFilesAssetsAssetValuationsValuation", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesAssetsAssetValuationsValuation
    {
        
        /// <summary>
        /// <para>Describes the purpose for the reporting: f.i. commercial, tax  in country 1, tax in country 2, etc.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Describes the purpose for the reporting: f.i. commercial, tax in country 1, tax i" +
            "n country 2, etc."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("AssetValuationType")]
        public string AssetValuationType { get; set; }
        
        /// <summary>
        /// <para>This describes the classification of the asset for (tax) reporting purposes.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This describes the classification of the asset for (tax) reporting purposes.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("ValuationClass")]
        public string ValuationClass { get; set; }
        
        /// <summary>
        /// <para>Total costs of acquisition and/or production of the asset at SelectionStartDate in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Total costs of acquisition and/or production of the asset at SelectionStartDate i" +
            "n the header\'s default currency."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AcquisitionAndProductionCostsBegin")]
        public decimal AcquisitionAndProductionCostsBegin { get; set; }
        
        /// <summary>
        /// <para>Total costs of acquisition and/or production of the asset at SelectionEndDate in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Total costs of acquisition and/or production of the asset at SelectionEndDate in " +
            "the header\'s default currency."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AcquisitionAndProductionCostsEnd")]
        public decimal AcquisitionAndProductionCostsEnd { get; set; }
        
        /// <summary>
        /// <para>Total amount of investment support for this asset in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Total amount of investment support for this asset in the header\'s default currenc" +
            "y."))]
        [System.Xml.Serialization.XmlElementAttribute("InvestmentSupport")]
        public decimal InvestmentSupport { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InvestmentSupport property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InvestmentSupportSpecified { get; set; }
        
        /// <summary>
        /// <para>Periode of useful life in years</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Periode of useful life in years")]
        [System.Xml.Serialization.XmlElementAttribute("AssetLifeYear")]
        public decimal AssetLifeYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssetLifeYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssetLifeYearSpecified { get; set; }
        
        /// <summary>
        /// <para>Period of useful life in months</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Period of useful life in months")]
        [System.Xml.Serialization.XmlElementAttribute("AssetLifeMonth")]
        public decimal AssetLifeMonth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssetLifeMonth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssetLifeMonthSpecified { get; set; }
        
        /// <summary>
        /// <para>Bookvalue of the acquisition and/or production of the asset in the  Selectionperiod in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Bookvalue of the acquisition and/or production of the asset in the Selectionperio" +
            "d in the header\'s default currency."))]
        [System.Xml.Serialization.XmlElementAttribute("AssetAddition")]
        public decimal AssetAddition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssetAddition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssetAdditionSpecified { get; set; }
        
        /// <summary>
        /// <para>Book value of the transfers of the asset during the Selectionperiod in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Book value of the transfers of the asset during the Selectionperiod in the header" +
            "\'s default currency."))]
        [System.Xml.Serialization.XmlElementAttribute("Transfers")]
        public decimal Transfers { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Transfers property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransfersSpecified { get; set; }
        
        /// <summary>
        /// <para>Book value of the disposals of the asset during the Selectionperiod in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Book value of the disposals of the asset during the Selectionperiod in the header" +
            "\'s default currency."))]
        [System.Xml.Serialization.XmlElementAttribute("AssetDisposal")]
        public decimal AssetDisposal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssetDisposal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssetDisposalSpecified { get; set; }
        
        /// <summary>
        /// <para>Bookvalue at the beginning of the Selectionperiod in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Bookvalue at the beginning of the Selectionperiod in the header\'s default currenc" +
            "y."))]
        [System.Xml.Serialization.XmlElementAttribute("BookValueBegin")]
        public decimal BookValueBegin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BookValueBegin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BookValueBeginSpecified { get; set; }
        
        /// <summary>
        /// <para>Method of normal depreciation during the Selectionperiod.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method of normal depreciation during the Selectionperiod.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("DepreciationMethod")]
        public string DepreciationMethod { get; set; }
        
        /// <summary>
        /// <para>The rate of the normal depreciation per year or month (depends on choice useful life periode)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("The rate of the normal depreciation per year or month (depends on choice useful l" +
            "ife periode)"))]
        [System.Xml.Serialization.XmlElementAttribute("DepreciationPercentage")]
        public decimal DepreciationPercentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepreciationPercentage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationPercentageSpecified { get; set; }
        
        /// <summary>
        /// <para>Total amouunt of normal depreciation during the Selectionperiod in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Total amouunt of normal depreciation during the Selectionperiod in the header\'s d" +
            "efault currency."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DepreciationForPeriod")]
        public decimal DepreciationForPeriod { get; set; }
        
        /// <summary>
        /// <para>Total amouunt of appreciation during the Selectionperiod in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Total amouunt of appreciation during the Selectionperiod in the header\'s default " +
            "currency."))]
        [System.Xml.Serialization.XmlElementAttribute("AppreciationForPeriod")]
        public decimal AppreciationForPeriod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AppreciationForPeriod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AppreciationForPeriodSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetValuationsValuationExtraordinaryDepreciationsForPeriodExtraordinaryDepreciationForPeriod> _extraordinaryDepreciationsForPeriod;
        
        /// <summary>
        /// <para>Extraordinary depreciations for this asset during the Selectionperiod.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extraordinary depreciations for this asset during the Selectionperiod.")]
        [System.Xml.Serialization.XmlArrayAttribute("ExtraordinaryDepreciationsForPeriod")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ExtraordinaryDepreciationForPeriod", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetValuationsValuationExtraordinaryDepreciationsForPeriodExtraordinaryDepreciationForPeriod> ExtraordinaryDepreciationsForPeriod
        {
            get
            {
                return _extraordinaryDepreciationsForPeriod;
            }
            private set
            {
                _extraordinaryDepreciationsForPeriod = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ExtraordinaryDepreciationsForPeriod collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtraordinaryDepreciationsForPeriodSpecified
        {
            get
            {
                return (this.ExtraordinaryDepreciationsForPeriod.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesAssetsAssetValuationsValuation" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesAssetsAssetValuationsValuation()
        {
            this._extraordinaryDepreciationsForPeriod = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetValuationsValuationExtraordinaryDepreciationsForPeriodExtraordinaryDepreciationForPeriod>();
        }
        
        /// <summary>
        /// <para>Total amount of depreciation for this asset</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total amount of depreciation for this asset")]
        [System.Xml.Serialization.XmlElementAttribute("AccumulatedDepreciation")]
        public decimal AccumulatedDepreciation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccumulatedDepreciation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccumulatedDepreciationSpecified { get; set; }
        
        /// <summary>
        /// <para>Bookvalue at the end of the Selectionperiod in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bookvalue at the end of the Selectionperiod in the header\'s default currency.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("BookValueEnd")]
        public decimal BookValueEnd { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(("AuditFileMasterFilesAssetsAssetValuationsValuationExtraordinaryDepreciationsForPe" +
        "riod"), Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesAssetsAssetValuationsValuationExtraordinaryDepreciationsForPeriod
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetValuationsValuationExtraordinaryDepreciationsForPeriodExtraordinaryDepreciationForPeriod> _extraordinaryDepreciationForPeriod;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("ExtraordinaryDepreciationForPeriod")]
        public System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetValuationsValuationExtraordinaryDepreciationsForPeriodExtraordinaryDepreciationForPeriod> ExtraordinaryDepreciationForPeriod
        {
            get
            {
                return _extraordinaryDepreciationForPeriod;
            }
            private set
            {
                _extraordinaryDepreciationForPeriod = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileMasterFilesAssetsAssetValuationsValuationExtraordinaryDepreciationsForPeriod" /> class.</para>
        /// </summary>
        public AuditFileMasterFilesAssetsAssetValuationsValuationExtraordinaryDepreciationsForPeriod()
        {
            this._extraordinaryDepreciationForPeriod = new System.Collections.ObjectModel.Collection<AuditFileMasterFilesAssetsAssetValuationsValuationExtraordinaryDepreciationsForPeriodExtraordinaryDepreciationForPeriod>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(("AuditFileMasterFilesAssetsAssetValuationsValuationExtraordinaryDepreciationsForPe" +
        "riodExtraordinaryDepreciationForPeriod"), Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileMasterFilesAssetsAssetValuationsValuationExtraordinaryDepreciationsForPeriodExtraordinaryDepreciationForPeriod
    {
        
        /// <summary>
        /// <para>Method of extraordinary depreciation during the Selectionperiod.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method of extraordinary depreciation during the Selectionperiod.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("ExtraordinaryDepreciationMethod")]
        public string ExtraordinaryDepreciationMethod { get; set; }
        
        /// <summary>
        /// <para>Amouunt of extraordinary depreciation during the Selectionperiod in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Amouunt of extraordinary depreciation during the Selectionperiod in the header\'s " +
            "default currency."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("ExtraordinaryDepreciationForPeriod")]
        public decimal ExtraordinaryDepreciationForPeriod { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileGeneralLedgerEntries", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileGeneralLedgerEntries
    {
        
        /// <summary>
        /// <para>Number of entries. This is the total number of Transaction entries (accounting documents/vouchers) from all Journals included in the audit file.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Number of entries. This is the total number of Transaction entries (accounting do" +
            "cuments/vouchers) from all Journals included in the audit file."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NumberOfEntries")]
        public string NumberOfEntries { get; set; }
        
        /// <summary>
        /// <para>The total of all debit amounts in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total of all debit amounts in the header\'s default currency.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TotalDebit")]
        public decimal TotalDebit { get; set; }
        
        /// <summary>
        /// <para>The total of all credit amounts in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total of all credit amounts in the header\'s default currency.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TotalCredit")]
        public decimal TotalCredit { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileGeneralLedgerEntriesJournal> _journal;
        
        /// <summary>
        /// <para>Journal information.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Journal information.")]
        [System.Xml.Serialization.XmlElementAttribute("Journal")]
        public System.Collections.ObjectModel.Collection<AuditFileGeneralLedgerEntriesJournal> Journal
        {
            get
            {
                return _journal;
            }
            private set
            {
                _journal = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Journal collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JournalSpecified
        {
            get
            {
                return (this.Journal.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileGeneralLedgerEntries" /> class.</para>
        /// </summary>
        public AuditFileGeneralLedgerEntries()
        {
            this._journal = new System.Collections.ObjectModel.Collection<AuditFileGeneralLedgerEntriesJournal>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileGeneralLedgerEntriesJournal", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileGeneralLedgerEntriesJournal
    {
        
        /// <summary>
        /// <para>Source GL journal identifier, or invoices and payments in single ledger systems.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Source GL journal identifier, or invoices and payments in single ledger systems.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("JournalID")]
        public string JournalId { get; set; }
        
        /// <summary>
        /// <para>Description of the Journal.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of the Journal.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Grouping mechanism for journals. Please use the examples in the technical description when appropriate.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Grouping mechanism for journals. Please use the examples in the technical descrip" +
            "tion when appropriate."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileGeneralLedgerEntriesJournalTransaction> _transaction;
        
        /// <summary>
        /// <para>Accounting transactions.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accounting transactions.")]
        [System.Xml.Serialization.XmlElementAttribute("Transaction")]
        public System.Collections.ObjectModel.Collection<AuditFileGeneralLedgerEntriesJournalTransaction> Transaction
        {
            get
            {
                return _transaction;
            }
            private set
            {
                _transaction = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Transaction collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransactionSpecified
        {
            get
            {
                return (this.Transaction.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileGeneralLedgerEntriesJournal" /> class.</para>
        /// </summary>
        public AuditFileGeneralLedgerEntriesJournal()
        {
            this._transaction = new System.Collections.ObjectModel.Collection<AuditFileGeneralLedgerEntriesJournalTransaction>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileGeneralLedgerEntriesJournalTransaction", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileGeneralLedgerEntriesJournalTransaction
    {
        
        /// <summary>
        /// <para>The number/ID of the accounting document/voucher.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number/ID of the accounting document/voucher.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionID")]
        public string TransactionId { get; set; }
        
        /// <summary>
        /// <para>Accounting Period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accounting Period.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Period")]
        public string Period { get; set; }
        
        /// <summary>
        /// <para>The year of the Accounting Period. Restriction: 1970-2100.</para>
        /// <para xml:lang="en">Minimum inclusive value: 1970.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2100.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The year of the Accounting Period. Restriction: 1970-2100.")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "1970", "2100")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("PeriodYear")]
        public ushort PeriodYear { get; set; }
        
        /// <summary>
        /// <para>The date of the accounting document/voucher.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date of the accounting document/voucher.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionDate", DataType="date")]
        public System.DateTime TransactionDate { get; set; }
        
        /// <summary>
        /// <para>Details of person or application that entered the transaction.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of person or application that entered the transaction.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SourceID")]
        public string SourceId { get; set; }
        
        /// <summary>
        /// <para>Type of voucher. Voucher type (bilagsart) should always be used on all transactions.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Type of voucher. Voucher type (bilagsart) should always be used on all transactio" +
            "ns."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("VoucherType")]
        public string VoucherType { get; set; }
        
        /// <summary>
        /// <para>Description of voucher type</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of voucher type")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("VoucherDescription")]
        public string VoucherDescription { get; set; }
        
        /// <summary>
        /// <para>Type of journaltransaction: normal, (automated) periodically, etc.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of journaltransaction: normal, (automated) periodically, etc.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionType")]
        public string TransactionType { get; set; }
        
        /// <summary>
        /// <para>Description of Journal Transaction.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of Journal Transaction.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Systems generated ID for batch.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Systems generated ID for batch.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("BatchID")]
        public string BatchId { get; set; }
        
        /// <summary>
        /// <para>Date captured by system. The date when the transaction was entered into the system - manual entry, imported transaction, etc. If this date is not available in your system, use the TransactionDate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Date captured by system. The date when the transaction was entered into the syste" +
            "m - manual entry, imported transaction, etc. If this date is not available in yo" +
            "ur system, use the TransactionDate."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("SystemEntryDate", DataType="date")]
        public System.DateTime SystemEntryDate { get; set; }
        
        /// <summary>
        /// <para>Date posting to the general ledger account. The date when the transaction was updated to the database. If this date is not available in your system, use the TransactionDate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Date posting to the general ledger account. The date when the transaction was upd" +
            "ated to the database. If this date is not available in your system, use the Tran" +
            "sactionDate."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("GLPostingDate", DataType="date")]
        public System.DateTime GlPostingDate { get; set; }
        
        /// <summary>
        /// <para>Date for modification of the accounting document/voucher (the latest change). The date when the transaction was modified and updated to the database.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Date for modification of the accounting document/voucher (the latest change). The" +
            " date when the transaction was modified and updated to the database."))]
        [System.Xml.Serialization.XmlElementAttribute("ModificationDate", DataType="date")]
        public System.DateTime ModificationDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ModificationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModificationDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Not in use.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("CustomerID")]
        public string CustomerId { get; set; }
        
        /// <summary>
        /// <para>Not in use.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not in use.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SupplierID")]
        public string SupplierId { get; set; }
        
        /// <summary>
        /// <para>Unique ID/number created by the system for the accounting document/voucher.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique ID/number created by the system for the accounting document/voucher.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("SystemID")]
        public string SystemId { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileGeneralLedgerEntriesJournalTransactionLine> _line;
        
        /// <summary>
        /// <para>Transaction lines.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transaction lines.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Line")]
        public System.Collections.ObjectModel.Collection<AuditFileGeneralLedgerEntriesJournalTransactionLine> Line
        {
            get
            {
                return _line;
            }
            private set
            {
                _line = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileGeneralLedgerEntriesJournalTransaction" /> class.</para>
        /// </summary>
        public AuditFileGeneralLedgerEntriesJournalTransaction()
        {
            this._line = new System.Collections.ObjectModel.Collection<AuditFileGeneralLedgerEntriesJournalTransactionLine>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileGeneralLedgerEntriesJournalTransactionLine", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileGeneralLedgerEntriesJournalTransactionLine
    {
        
        /// <summary>
        /// <para>Identifier to trace entry to journal line or posting reference.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identifier to trace entry to journal line or posting reference.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("RecordID")]
        public string RecordId { get; set; }
        
        /// <summary>
        /// <para>General ledger account code/number. If this Line is a ledger/sub account (accounts payable or accounts receivable) entry, then this is the account code/number into where this ledger/sub account is consolidated in the balance sheet.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("General ledger account code/number. If this Line is a ledger/sub account (account" +
            "s payable or accounts receivable) entry, then this is the account code/number in" +
            "to where this ledger/sub account is consolidated in the balance sheet."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AccountID")]
        public string AccountId { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AnalysisStructure> _analysis;
        
        /// <summary>
        /// <para>General Ledger analysis codes</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Ledger analysis codes")]
        [System.Xml.Serialization.XmlElementAttribute("Analysis")]
        public System.Collections.ObjectModel.Collection<AnalysisStructure> Analysis
        {
            get
            {
                return _analysis;
            }
            private set
            {
                _analysis = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Analysis collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnalysisSpecified
        {
            get
            {
                return (this.Analysis.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileGeneralLedgerEntriesJournalTransactionLine" /> class.</para>
        /// </summary>
        public AuditFileGeneralLedgerEntriesJournalTransactionLine()
        {
            this._analysis = new System.Collections.ObjectModel.Collection<AnalysisStructure>();
            this._taxInformation = new System.Collections.ObjectModel.Collection<TaxInformationStructure>();
        }
        
        /// <summary>
        /// <para>Effective date from which interest charged. To be reported when this date or this Line of the accounting document/voucher differs from the TransactionDate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Effective date from which interest charged. To be reported when this date or this" +
            " Line of the accounting document/voucher differs from the TransactionDate."))]
        [System.Xml.Serialization.XmlElementAttribute("ValueDate", DataType="date")]
        public System.DateTime ValueDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ValueDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Source document number to which line relates.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Source document number to which line relates.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SourceDocumentID")]
        public string SourceDocumentId { get; set; }
        
        /// <summary>
        /// <para>Unique account code/number for the customer. Is only used if this Line is a ledger/sub account (accounts payable or accounts receivable) entry. Must not be used in conjunction with SupplierID.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Unique account code/number for the customer. Is only used if this Line is a ledge" +
            "r/sub account (accounts payable or accounts receivable) entry. Must not be used " +
            "in conjunction with SupplierID."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("CustomerID")]
        public string CustomerId { get; set; }
        
        /// <summary>
        /// <para>Unique account code/number for the supplier. Is only used if this Line is a ledger/sub account (accounts payable or accounts receivable) entry. Must not be used in conjunction with CustomerID.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Unique account code/number for the supplier. Is only used if this Line is a ledge" +
            "r/sub account (accounts payable or accounts receivable) entry. Must not be used " +
            "in conjunction with CustomerID."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SupplierID")]
        public string SupplierId { get; set; }
        
        /// <summary>
        /// <para>Description of the Journal Line.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of the Journal Line.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Debit amount information for transaction.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Debit amount information for transaction.")]
        [System.Xml.Serialization.XmlElementAttribute("DebitAmount")]
        public AmountStructure DebitAmount { get; set; }
        
        /// <summary>
        /// <para>Credit amount information for transaction.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit amount information for transaction.")]
        [System.Xml.Serialization.XmlElementAttribute("CreditAmount")]
        public AmountStructure CreditAmount { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TaxInformationStructure> _taxInformation;
        
        /// <summary>
        /// <para>Tax information for the accounting line.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax information for the accounting line.")]
        [System.Xml.Serialization.XmlElementAttribute("TaxInformation")]
        public System.Collections.ObjectModel.Collection<TaxInformationStructure> TaxInformation
        {
            get
            {
                return _taxInformation;
            }
            private set
            {
                _taxInformation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TaxInformation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxInformationSpecified
        {
            get
            {
                return (this.TaxInformation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>The reference number, such as invoice or credit note number.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reference number, such as invoice or credit note number.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("ReferenceNumber")]
        public string ReferenceNumber { get; set; }
        
        /// <summary>
        /// <para>The CID number.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The CID number.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("CID")]
        public string Cid { get; set; }
        
        /// <summary>
        /// <para>The due date.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The due date.")]
        [System.Xml.Serialization.XmlElementAttribute("DueDate", DataType="date")]
        public System.DateTime DueDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DueDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Quantity.</para>
        /// <para>Used to describe a quantity. Monetary amount. 22 digits max, of which 6 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity.")]
        [System.Xml.Serialization.XmlElementAttribute("Quantity")]
        public decimal Quantity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Quantity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified { get; set; }
        
        /// <summary>
        /// <para>Cross-reference. Information about matched documents/records.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cross-reference. Information about matched documents/records.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("CrossReference")]
        public string CrossReference { get; set; }
        
        /// <summary>
        /// <para>Time captured by system. The time when the transaction was entered into the system - manual entry, imported transaction, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Time captured by system. The time when the transaction was entered into the syste" +
            "m - manual entry, imported transaction, etc."))]
        [System.Xml.Serialization.XmlElementAttribute("SystemEntryTime", DataType="dateTime")]
        public System.DateTime SystemEntryTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SystemEntryTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SystemEntryTimeSpecified { get; set; }
        
        /// <summary>
        /// <para>The unique ID code/number for the owner.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The unique ID code/number for the owner.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("OwnerID")]
        public string OwnerId { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocuments", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocuments
    {
        
        [System.Xml.Serialization.XmlElementAttribute("SalesInvoices")]
        public AuditFileSourceDocumentsSalesInvoices SalesInvoices { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("PurchaseInvoices")]
        public AuditFileSourceDocumentsPurchaseInvoices PurchaseInvoices { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Payments")]
        public AuditFileSourceDocumentsPayments Payments { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("MovementOfGoods")]
        public AuditFileSourceDocumentsMovementOfGoods MovementOfGoods { get; set; }
        
        /// <summary>
        /// <para>Details of all transactions related to an asset during the Selectionperiod.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of all transactions related to an asset during the Selectionperiod.")]
        [System.Xml.Serialization.XmlElementAttribute("AssetTransactions")]
        public AuditFileSourceDocumentsAssetTransactions AssetTransactions { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsSalesInvoices", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsSalesInvoices
    {
        
        /// <summary>
        /// <para>Number of entries</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of entries")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NumberOfEntries")]
        public string NumberOfEntries { get; set; }
        
        /// <summary>
        /// <para>The total of all debit amounts in the header's default currency</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total of all debit amounts in the header\'s default currency")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TotalDebit")]
        public decimal TotalDebit { get; set; }
        
        /// <summary>
        /// <para>The total of all credit amounts in the header's default currency</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total of all credit amounts in the header\'s default currency")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TotalCredit")]
        public decimal TotalCredit { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<InvoiceStructure> _invoice;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Invoice")]
        public System.Collections.ObjectModel.Collection<InvoiceStructure> Invoice
        {
            get
            {
                return _invoice;
            }
            private set
            {
                _invoice = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileSourceDocumentsSalesInvoices" /> class.</para>
        /// </summary>
        public AuditFileSourceDocumentsSalesInvoices()
        {
            this._invoice = new System.Collections.ObjectModel.Collection<InvoiceStructure>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsPurchaseInvoices", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsPurchaseInvoices
    {
        
        /// <summary>
        /// <para>Number of entries</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of entries")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NumberOfEntries")]
        public string NumberOfEntries { get; set; }
        
        /// <summary>
        /// <para>The total of all debit amounts in the header's default currency</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total of all debit amounts in the header\'s default currency")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TotalDebit")]
        public decimal TotalDebit { get; set; }
        
        /// <summary>
        /// <para>The total of all credit amounts in the header's default currency</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total of all credit amounts in the header\'s default currency")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TotalCredit")]
        public decimal TotalCredit { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<InvoiceStructure> _invoice;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Invoice")]
        public System.Collections.ObjectModel.Collection<InvoiceStructure> Invoice
        {
            get
            {
                return _invoice;
            }
            private set
            {
                _invoice = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileSourceDocumentsPurchaseInvoices" /> class.</para>
        /// </summary>
        public AuditFileSourceDocumentsPurchaseInvoices()
        {
            this._invoice = new System.Collections.ObjectModel.Collection<InvoiceStructure>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsPayments", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsPayments
    {
        
        /// <summary>
        /// <para>Number of entries</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of entries")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NumberOfEntries")]
        public string NumberOfEntries { get; set; }
        
        /// <summary>
        /// <para>The total of all debit amounts in the header's default currency</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total of all debit amounts in the header\'s default currency")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TotalDebit")]
        public decimal TotalDebit { get; set; }
        
        /// <summary>
        /// <para>The total of all credit amounts in the header's default currency</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total of all credit amounts in the header\'s default currency")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TotalCredit")]
        public decimal TotalCredit { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsPaymentsPayment> _payment;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Payment")]
        public System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsPaymentsPayment> Payment
        {
            get
            {
                return _payment;
            }
            private set
            {
                _payment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileSourceDocumentsPayments" /> class.</para>
        /// </summary>
        public AuditFileSourceDocumentsPayments()
        {
            this._payment = new System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsPaymentsPayment>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsPaymentsPayment", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsPaymentsPayment
    {
        
        /// <summary>
        /// <para>Unique reference number for payment</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique reference number for payment")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("PaymentRefNo")]
        public string PaymentRefNo { get; set; }
        
        /// <summary>
        /// <para>Accounting Period</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accounting Period")]
        [System.Xml.Serialization.XmlElementAttribute("Period")]
        public string Period { get; set; }
        
        /// <summary>
        /// <para>The year of the Accounting Period.</para>
        /// <para xml:lang="en">Minimum inclusive value: 1970.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2100.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The year of the Accounting Period.")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "1970", "2100")]
        [System.Xml.Serialization.XmlElementAttribute("PeriodYear")]
        public ushort PeriodYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PeriodYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodYearSpecified { get; set; }
        
        /// <summary>
        /// <para>Cross-reference to GL posting. It can contain many different levels to identify the transaction. It could include cost centres such as company, division, region, group and branch/department.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Cross-reference to GL posting. It can contain many different levels to identify t" +
            "he transaction. It could include cost centres such as company, division, region," +
            " group and branch/department."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionID")]
        public string TransactionId { get; set; }
        
        /// <summary>
        /// <para>Document date</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Document date")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionDate", DataType="date")]
        public System.DateTime TransactionDate { get; set; }
        
        /// <summary>
        /// <para>Cheque, Bank, Giro, Cash, etc.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cheque, Bank, Giro, Cash, etc.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("PaymentMethod")]
        public string PaymentMethod { get; set; }
        
        /// <summary>
        /// <para>Description of the payment.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of the payment.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Systems generated ID for batch</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Systems generated ID for batch")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("BatchID")]
        public string BatchId { get; set; }
        
        /// <summary>
        /// <para>Unique number created by the system for the document</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique number created by the system for the document")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SystemID")]
        public string SystemId { get; set; }
        
        /// <summary>
        /// <para>Details of person or application that entered the transaction</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of person or application that entered the transaction")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SourceID")]
        public string SourceId { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsPaymentsPaymentLine> _line;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Line")]
        public System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsPaymentsPaymentLine> Line
        {
            get
            {
                return _line;
            }
            private set
            {
                _line = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileSourceDocumentsPaymentsPayment" /> class.</para>
        /// </summary>
        public AuditFileSourceDocumentsPaymentsPayment()
        {
            this._line = new System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsPaymentsPaymentLine>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Settlement")]
        public AuditFileSourceDocumentsPaymentsPaymentSettlement Settlement { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentTotals")]
        public AuditFileSourceDocumentsPaymentsPaymentDocumentTotals DocumentTotals { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsPaymentsPaymentLine", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsPaymentsPaymentLine
    {
        
        /// <summary>
        /// <para>Number of the paymentline</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of the paymentline")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("LineNumber")]
        public string LineNumber { get; set; }
        
        /// <summary>
        /// <para>The source document to which the line relates</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The source document to which the line relates")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SourceDocumentID")]
        public string SourceDocumentId { get; set; }
        
        /// <summary>
        /// <para>General Ledger Account code. Can be including sub-account id. It can contain many different levels to identify the Account. It could include cost centres such as company, division, region, group and branch/department.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("General Ledger Account code. Can be including sub-account id. It can contain many" +
            " different levels to identify the Account. It could include cost centres such as" +
            " company, division, region, group and branch/department."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("AccountID")]
        public string AccountId { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AnalysisStructure> _analysis;
        
        /// <summary>
        /// <para>General Ledger analysis codes</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Ledger analysis codes")]
        [System.Xml.Serialization.XmlElementAttribute("Analysis")]
        public System.Collections.ObjectModel.Collection<AnalysisStructure> Analysis
        {
            get
            {
                return _analysis;
            }
            private set
            {
                _analysis = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Analysis collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnalysisSpecified
        {
            get
            {
                return (this.Analysis.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileSourceDocumentsPaymentsPaymentLine" /> class.</para>
        /// </summary>
        public AuditFileSourceDocumentsPaymentsPaymentLine()
        {
            this._analysis = new System.Collections.ObjectModel.Collection<AnalysisStructure>();
            this._taxInformation = new System.Collections.ObjectModel.Collection<TaxInformationStructure>();
        }
        
        /// <summary>
        /// <para>Unique code for the customer</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique code for the customer")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("CustomerID")]
        public string CustomerId { get; set; }
        
        /// <summary>
        /// <para>Unique code for the supplier</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique code for the supplier")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SupplierID")]
        public string SupplierId { get; set; }
        
        /// <summary>
        /// <para>Tax Point date where recorded or if not recorded then the Invoice date</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Point date where recorded or if not recorded then the Invoice date")]
        [System.Xml.Serialization.XmlElementAttribute("TaxPointDate", DataType="date")]
        public System.DateTime TaxPointDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxPointDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxPointDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Description of the payment line.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of the payment line.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the amounts on line-level are debit or credit amounts. Entry must correspond to entry reflected in General Ledger Entry. Signing of lineamounts is relative to this indicator. E.g. a return can lead to a negative amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Indicates whether the amounts on line-level are debit or credit amounts. Entry mu" +
            "st correspond to entry reflected in General Ledger Entry. Signing of lineamounts" +
            " is relative to this indicator. E.g. a return can lead to a negative amount."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DebitCreditIndicator")]
        public AuditFileSourceDocumentsPaymentsPaymentLineDebitCreditIndicator DebitCreditIndicator { get; set; }
        
        /// <summary>
        /// <para>Amount for transaction excluding taxes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amount for transaction excluding taxes.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("PaymentLineAmount")]
        public AmountStructure PaymentLineAmount { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TaxInformationStructure> _taxInformation;
        
        [System.Xml.Serialization.XmlElementAttribute("TaxInformation")]
        public System.Collections.ObjectModel.Collection<TaxInformationStructure> TaxInformation
        {
            get
            {
                return _taxInformation;
            }
            private set
            {
                _taxInformation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TaxInformation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxInformationSpecified
        {
            get
            {
                return (this.TaxInformation.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsPaymentsPaymentLineDebitCreditIndicator", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    public enum AuditFileSourceDocumentsPaymentsPaymentLineDebitCreditIndicator
    {
        
        D,
        
        C,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsPaymentsPaymentSettlement", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsPaymentsPaymentSettlement
    {
        
        /// <summary>
        /// <para>Description Settlement / Other Discount</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description Settlement / Other Discount")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SettlementDiscount")]
        public string SettlementDiscount { get; set; }
        
        /// <summary>
        /// <para>Settlement amount</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Settlement amount")]
        [System.Xml.Serialization.XmlElementAttribute("SettlementAmount")]
        public AmountStructure SettlementAmount { get; set; }
        
        /// <summary>
        /// <para>Date settled</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date settled")]
        [System.Xml.Serialization.XmlElementAttribute("SettlementDate", DataType="date")]
        public System.DateTime SettlementDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SettlementDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SettlementDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Payment mechanism</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Payment mechanism")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("PaymentMechanism")]
        public string PaymentMechanism { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsPaymentsPaymentDocumentTotals", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsPaymentsPaymentDocumentTotals
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TaxInformationStructure> _taxInformationTotals;
        
        /// <summary>
        /// <para>Control totals tax payable information. Per TaxType/TaxCode the TaxBase and TaxAmount are summarised.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Control totals tax payable information. Per TaxType/TaxCode the TaxBase and TaxAm" +
            "ount are summarised."))]
        [System.Xml.Serialization.XmlElementAttribute("TaxInformationTotals")]
        public System.Collections.ObjectModel.Collection<TaxInformationStructure> TaxInformationTotals
        {
            get
            {
                return _taxInformationTotals;
            }
            private set
            {
                _taxInformationTotals = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TaxInformationTotals collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxInformationTotalsSpecified
        {
            get
            {
                return (this.TaxInformationTotals.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileSourceDocumentsPaymentsPaymentDocumentTotals" /> class.</para>
        /// </summary>
        public AuditFileSourceDocumentsPaymentsPaymentDocumentTotals()
        {
            this._taxInformationTotals = new System.Collections.ObjectModel.Collection<TaxInformationStructure>();
        }
        
        /// <summary>
        /// <para>Total amount excluding tax in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total amount excluding tax in the header\'s default currency.")]
        [System.Xml.Serialization.XmlElementAttribute("NetTotal")]
        public decimal NetTotal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetTotal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetTotalSpecified { get; set; }
        
        /// <summary>
        /// <para>Total amount including tax in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total amount including tax in the header\'s default currency.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("GrossTotal")]
        public decimal GrossTotal { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsMovementOfGoods", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsMovementOfGoods
    {
        
        /// <summary>
        /// <para>Number of movementlines in selected period</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of movementlines in selected period")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NumberOfMovementLines")]
        public string NumberOfMovementLines { get; set; }
        
        /// <summary>
        /// <para>Quantity of goods received</para>
        /// <para>Used to describe a quantity. Monetary amount. 22 digits max, of which 6 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of goods received")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TotalQuantityReceived")]
        public decimal TotalQuantityReceived { get; set; }
        
        /// <summary>
        /// <para>Quantity of goods issued in selected period</para>
        /// <para>Used to describe a quantity. Monetary amount. 22 digits max, of which 6 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of goods issued in selected period")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("TotalQuantityIssued")]
        public decimal TotalQuantityIssued { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsMovementOfGoodsStockMovement> _stockMovement;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("StockMovement")]
        public System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsMovementOfGoodsStockMovement> StockMovement
        {
            get
            {
                return _stockMovement;
            }
            private set
            {
                _stockMovement = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileSourceDocumentsMovementOfGoods" /> class.</para>
        /// </summary>
        public AuditFileSourceDocumentsMovementOfGoods()
        {
            this._stockMovement = new System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsMovementOfGoodsStockMovement>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsMovementOfGoodsStockMovement", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsMovementOfGoodsStockMovement
    {
        
        /// <summary>
        /// <para>Unique reference to the movement.</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique reference to the movement.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("MovementReference")]
        public string MovementReference { get; set; }
        
        /// <summary>
        /// <para>Document date</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Document date")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("MovementDate", DataType="date")]
        public System.DateTime MovementDate { get; set; }
        
        /// <summary>
        /// <para>Date of posting of the movement if different to Movement Date</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date of posting of the movement if different to Movement Date")]
        [System.Xml.Serialization.XmlElementAttribute("MovementPostingDate", DataType="date")]
        public System.DateTime MovementPostingDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MovementPostingDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MovementPostingDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Time of posting of the movement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Time of posting of the movement")]
        [System.Xml.Serialization.XmlElementAttribute("MovementPostingTime", DataType="time")]
        public System.DateTime MovementPostingTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MovementPostingTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MovementPostingTimeSpecified { get; set; }
        
        /// <summary>
        /// <para>Date of supply of goods</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date of supply of goods")]
        [System.Xml.Serialization.XmlElementAttribute("TaxPointDate", DataType="date")]
        public System.DateTime TaxPointDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxPointDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxPointDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The movementtype expresses the type of the process for the underlaying lines. E.g. production, sales, purchase. Predescribed TABLE is possible.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("The movementtype expresses the type of the process for the underlaying lines. E.g" +
            ". production, sales, purchase. Predescribed TABLE is possible."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("MovementType")]
        public string MovementType { get; set; }
        
        /// <summary>
        /// <para>Details of person or application that entered the transaction</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of person or application that entered the transaction")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SourceID")]
        public string SourceId { get; set; }
        
        /// <summary>
        /// <para>Unique number created by the system for the document</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique number created by the system for the document")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SystemID")]
        public string SystemId { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentReference")]
        public AuditFileSourceDocumentsMovementOfGoodsStockMovementDocumentReference DocumentReference { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsMovementOfGoodsStockMovementLine> _line;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Line")]
        public System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsMovementOfGoodsStockMovementLine> Line
        {
            get
            {
                return _line;
            }
            private set
            {
                _line = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileSourceDocumentsMovementOfGoodsStockMovement" /> class.</para>
        /// </summary>
        public AuditFileSourceDocumentsMovementOfGoodsStockMovement()
        {
            this._line = new System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsMovementOfGoodsStockMovementLine>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsMovementOfGoodsStockMovementDocumentReference", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsMovementOfGoodsStockMovementDocumentReference
    {
        
        /// <summary>
        /// <para>Type of document</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of document")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DocumentType")]
        public string DocumentType { get; set; }
        
        /// <summary>
        /// <para>Reference number of the document</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference number of the document")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DocumentNumber")]
        public string DocumentNumber { get; set; }
        
        /// <summary>
        /// <para>Line number of the document</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Line number of the document")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("DocumentLine")]
        public string DocumentLine { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsMovementOfGoodsStockMovementLine", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsMovementOfGoodsStockMovementLine
    {
        
        /// <summary>
        /// <para>Number of the movementline</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of the movementline")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("LineNumber")]
        public string LineNumber { get; set; }
        
        /// <summary>
        /// <para>General Ledger Account code. Can be including sub-account id.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Ledger Account code. Can be including sub-account id.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("AccountID")]
        public string AccountId { get; set; }
        
        /// <summary>
        /// <para>Cross-reference to GL posting. It can contain many different levels to identify the transaction. It could include cost centres such as company, division, region, group and branch/department.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Cross-reference to GL posting. It can contain many different levels to identify t" +
            "he transaction. It could include cost centres such as company, division, region," +
            " group and branch/department."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionID")]
        public string TransactionId { get; set; }
        
        /// <summary>
        /// <para>Unique code for the customer</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique code for the customer")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("CustomerID")]
        public string CustomerId { get; set; }
        
        /// <summary>
        /// <para>Unique code for the supplier</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique code for the supplier")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SupplierID")]
        public string SupplierId { get; set; }
        
        /// <summary>
        /// <para>Ship To details</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ship To details")]
        [System.Xml.Serialization.XmlElementAttribute("ShipTo")]
        public ShippingPointStructure ShipTo { get; set; }
        
        /// <summary>
        /// <para>Ship from Details</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ship from Details")]
        [System.Xml.Serialization.XmlElementAttribute("ShipFrom")]
        public ShippingPointStructure ShipFrom { get; set; }
        
        /// <summary>
        /// <para>Product code</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product code")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("ProductCode")]
        public string ProductCode { get; set; }
        
        /// <summary>
        /// <para>Stock batch, lot, serial identification. Not used when there is exactly 1 PhysicalStock entry per ProductCode</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Stock batch, lot, serial identification. Not used when there is exactly 1 Physica" +
            "lStock entry per ProductCode"))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("StockAccountNo")]
        public string StockAccountNo { get; set; }
        
        /// <summary>
        /// <para>Quantity of goods</para>
        /// <para>Used to describe a quantity. Monetary amount. 22 digits max, of which 6 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of goods")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Quantity")]
        public decimal Quantity { get; set; }
        
        /// <summary>
        /// <para>Quantity unit of measure e.g. pack of 12</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity unit of measure e.g. pack of 12")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("UnitOfMeasure")]
        public string UnitOfMeasure { get; set; }
        
        /// <summary>
        /// <para>Conversion factor of the UOM to UOM Physical Stock</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Conversion factor of the UOM to UOM Physical Stock")]
        [System.Xml.Serialization.XmlElementAttribute("UOMToUOMPhysicalStockConversionFactor")]
        public decimal UomToUomPhysicalStockConversionFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UomToUomPhysicalStockConversionFactor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UomToUomPhysicalStockConversionFactorSpecified { get; set; }
        
        /// <summary>
        /// <para>Value of the transaction line as registrerd in the general ledger in the header's default currency.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Value of the transaction line as registrerd in the general ledger in the header\'s" +
            " default currency."))]
        [System.Xml.Serialization.XmlElementAttribute("BookValue")]
        public decimal BookValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BookValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BookValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Indentify the type of the movement on line / article level. A movement(type) production contains f.i. use of components, getting finished product, efficiencyloss as movementsubtypes. Predescribed TABLE is possible.</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Indentify the type of the movement on line / article level. A movement(type) prod" +
            "uction contains f.i. use of components, getting finished product, efficiencyloss" +
            " as movementsubtypes. Predescribed TABLE is possible."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("MovementSubType")]
        public string MovementSubType { get; set; }
        
        /// <summary>
        /// <para>A reason for the movement</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A reason for the movement")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("MovementComments")]
        public string MovementComments { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TaxInformationStructure> _taxInformation;
        
        [System.Xml.Serialization.XmlElementAttribute("TaxInformation")]
        public System.Collections.ObjectModel.Collection<TaxInformationStructure> TaxInformation
        {
            get
            {
                return _taxInformation;
            }
            private set
            {
                _taxInformation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TaxInformation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxInformationSpecified
        {
            get
            {
                return (this.TaxInformation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileSourceDocumentsMovementOfGoodsStockMovementLine" /> class.</para>
        /// </summary>
        public AuditFileSourceDocumentsMovementOfGoodsStockMovementLine()
        {
            this._taxInformation = new System.Collections.ObjectModel.Collection<TaxInformationStructure>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsAssetTransactions", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsAssetTransactions
    {
        
        /// <summary>
        /// <para>Number of movementlines during selected period</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of movementlines during selected period")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NumberOfAssetTransactions")]
        public string NumberOfAssetTransactions { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsAssetTransactionsAssetTransaction> _assetTransaction;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AssetTransaction")]
        public System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsAssetTransactionsAssetTransaction> AssetTransaction
        {
            get
            {
                return _assetTransaction;
            }
            private set
            {
                _assetTransaction = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileSourceDocumentsAssetTransactions" /> class.</para>
        /// </summary>
        public AuditFileSourceDocumentsAssetTransactions()
        {
            this._assetTransaction = new System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsAssetTransactionsAssetTransaction>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsAssetTransactionsAssetTransaction", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsAssetTransactionsAssetTransaction
    {
        
        /// <summary>
        /// <para>Unique Identification  of the transaction</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identification of the transaction")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AssetTransactionID")]
        public string AssetTransactionId { get; set; }
        
        /// <summary>
        /// <para>Unique identifier of the asset</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique identifier of the asset")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AssetID")]
        public string AssetId { get; set; }
        
        /// <summary>
        /// <para>Code for the type of the transaction</para>
        /// <para>Text of max 9 characters.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Code for the type of the transaction")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AssetTransactionType")]
        public string AssetTransactionType { get; set; }
        
        /// <summary>
        /// <para>Description of the type of the transaction.</para>
        /// <para>256 character text.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of the type of the transaction.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Recording date of the transaction type (e. g. assets: date of the addition of the asset)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Recording date of the transaction type (e. g. assets: date of the addition of the" +
            " asset)"))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AssetTransactionDate", DataType="date")]
        public System.DateTime AssetTransactionDate { get; set; }
        
        /// <summary>
        /// <para>Information about the supplier of the asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information about the supplier of the asset")]
        [System.Xml.Serialization.XmlElementAttribute("Supplier")]
        public AuditFileSourceDocumentsAssetTransactionsAssetTransactionSupplier Supplier { get; set; }
        
        /// <summary>
        /// <para>Cross-reference to GL posting in the journal. It can contain many different levels to identify the transaction. It could include cost centres such as company, division, region, group and branch/department.</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Cross-reference to GL posting in the journal. It can contain many different level" +
            "s to identify the transaction. It could include cost centres such as company, di" +
            "vision, region, group and branch/department."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionID")]
        public string TransactionId { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsAssetTransactionsAssetTransactionAssetTransactionValuationsAssetTransactionValuation> _assetTransactionValuations;
        
        /// <summary>
        /// <para>These amounts of the transaction can differ per asset valuation type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("These amounts of the transaction can differ per asset valuation type.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlArrayAttribute("AssetTransactionValuations")]
        [System.Xml.Serialization.XmlArrayItemAttribute("AssetTransactionValuation", Namespace="urn:StandardAuditFile-Taxation-Financial:NO")]
        public System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsAssetTransactionsAssetTransactionAssetTransactionValuationsAssetTransactionValuation> AssetTransactionValuations
        {
            get
            {
                return _assetTransactionValuations;
            }
            private set
            {
                _assetTransactionValuations = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileSourceDocumentsAssetTransactionsAssetTransaction" /> class.</para>
        /// </summary>
        public AuditFileSourceDocumentsAssetTransactionsAssetTransaction()
        {
            this._assetTransactionValuations = new System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsAssetTransactionsAssetTransactionAssetTransactionValuationsAssetTransactionValuation>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AuditFileSourceDocumentsAssetTransactionsAssetTransactionSupplier", Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsAssetTransactionsAssetTransactionSupplier
    {
        
        /// <summary>
        /// <para>Name of the supplier of the asset</para>
        /// <para>70 character text.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Name of the supplier of the asset")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("SupplierName")]
        public string SupplierName { get; set; }
        
        /// <summary>
        /// <para>Unique code for the supplier</para>
        /// <para>35 character text.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique code for the supplier")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.Xml.Serialization.XmlElementAttribute("SupplierID")]
        public string SupplierId { get; set; }
        
        /// <summary>
        /// <para>Address information of the supplier of the asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Address information of the supplier of the asset")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("PostalAddress")]
        public AddressStructure PostalAddress { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(("AuditFileSourceDocumentsAssetTransactionsAssetTransactionAssetTransactionValuatio" +
        "ns"), Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsAssetTransactionsAssetTransactionAssetTransactionValuations
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsAssetTransactionsAssetTransactionAssetTransactionValuationsAssetTransactionValuation> _assetTransactionValuation;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AssetTransactionValuation")]
        public System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsAssetTransactionsAssetTransactionAssetTransactionValuationsAssetTransactionValuation> AssetTransactionValuation
        {
            get
            {
                return _assetTransactionValuation;
            }
            private set
            {
                _assetTransactionValuation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AuditFileSourceDocumentsAssetTransactionsAssetTransactionAssetTransactionValuations" /> class.</para>
        /// </summary>
        public AuditFileSourceDocumentsAssetTransactionsAssetTransactionAssetTransactionValuations()
        {
            this._assetTransactionValuation = new System.Collections.ObjectModel.Collection<AuditFileSourceDocumentsAssetTransactionsAssetTransactionAssetTransactionValuationsAssetTransactionValuation>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1179.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(("AuditFileSourceDocumentsAssetTransactionsAssetTransactionAssetTransactionValuatio" +
        "nsAssetTransactionValuation"), Namespace="urn:StandardAuditFile-Taxation-Financial:NO", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditFileSourceDocumentsAssetTransactionsAssetTransactionAssetTransactionValuationsAssetTransactionValuation
    {
        
        /// <summary>
        /// <para>Describes the purpose for the reporting: f.i. commercial, tax  in country 1, tax in country 2, etc.</para>
        /// <para>18 character text.</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Describes the purpose for the reporting: f.i. commercial, tax in country 1, tax i" +
            "n country 2, etc."))]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(18)]
        [System.Xml.Serialization.XmlElementAttribute("AssetValuationType")]
        public string AssetValuationType { get; set; }
        
        /// <summary>
        /// <para>Costs of acquisition and/or production of related asset transaction in the header's default currency at date of transaction.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Costs of acquisition and/or production of related asset transaction in the header" +
            "\'s default currency at date of transaction."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AcquisitionAndProductionCostsOnTransaction")]
        public decimal AcquisitionAndProductionCostsOnTransaction { get; set; }
        
        /// <summary>
        /// <para>Bookvalue of related asset transaction in the header's default currency at date of transaction.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Bookvalue of related asset transaction in the header\'s default currency at date o" +
            "f transaction."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("BookValueOnTransaction")]
        public decimal BookValueOnTransaction { get; set; }
        
        /// <summary>
        /// <para>Net Amount of related asset transaction in the header's default currency, for instance the net sales revenue.</para>
        /// <para>Monetary amount.18 digits max, of which 2 can be fractional digits.</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(("Net Amount of related asset transaction in the header\'s default currency, for ins" +
            "tance the net sales revenue."))]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AssetTransactionAmount")]
        public decimal AssetTransactionAmount { get; set; }
    }
}
